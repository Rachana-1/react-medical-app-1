{"ast":null,"code":"import _classCallCheck from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\src\\\\components\\\\Utils\\\\LanguageDropdown\\\\language-dropdown.component.js\";\nimport React, { Component } from 'react';\nimport { Dropdown } from \"./..\";\nimport { toast } from 'react-toastify';\nvar languages = {\n  en: {\n    id: 'en',\n    icon: 'us'\n  },\n  es: {\n    id: 'es',\n    icon: 'es'\n  },\n  'en-US': {\n    id: 'en-US',\n    icon: 'us'\n  }\n};\n\nvar LanguageDropdown = /*#__PURE__*/function (_Component) {\n  _inherits(LanguageDropdown, _Component);\n\n  function LanguageDropdown() {\n    var _this;\n\n    _classCallCheck(this, LanguageDropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LanguageDropdown).call(this));\n\n    _this.getLanguage = function () {\n      return localStorage.getItem('i18nextLng') || 'en';\n    };\n\n    _this.onLanguageSelect = function (nextLanguage) {\n      var i18n = _this.props.i18n;\n      toast.dismiss();\n      i18n.changeLanguage(nextLanguage);\n\n      _this.setState({\n        language: _this.getLanguage()\n      });\n    };\n\n    _this.state = {\n      language: _this.getLanguage()\n    };\n    return _this;\n  }\n\n  _createClass(LanguageDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var t = this.props.t;\n      var language = this.state.language;\n      var profileOpts = [{\n        label: t('navBar.languages.en'),\n        onClick: function onClick() {\n          return _this2.onLanguageSelect('en');\n        },\n        icon: 'us',\n        customIcon: true\n      }, {\n        label: t('navBar.languages.es'),\n        onClick: function onClick() {\n          return _this2.onLanguageSelect('es');\n        },\n        icon: 'es',\n        customIcon: true\n      }];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        actions: profileOpts,\n        hover: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flag-icon flag-icon-\".concat(language && languages[language] ? languages[language].icon : 'us'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LanguageDropdown;\n}(Component);\n\nexport default LanguageDropdown;","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/components/Utils/LanguageDropdown/language-dropdown.component.js"],"names":["React","Component","Dropdown","toast","languages","en","id","icon","es","LanguageDropdown","getLanguage","localStorage","getItem","onLanguageSelect","nextLanguage","i18n","props","dismiss","changeLanguage","setState","language","state","t","profileOpts","label","onClick","customIcon"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,IAAI,EAAE;AAFJ,GADY;AAKhBC,EAAAA,EAAE,EAAE;AACFF,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,IAAI,EAAE;AAFJ,GALY;AAShB,WAAS;AACPD,IAAAA,EAAE,EAAE,OADG;AAEPC,IAAAA,IAAI,EAAE;AAFC;AATO,CAAlB;;IAoBME,gB;;;AACJ,8BAAc;AAAA;;AAAA;;AACZ;;AADY,UAKdC,WALc,GAKA;AAAA,aAAMC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IAA5C;AAAA,KALA;;AAAA,UAOdC,gBAPc,GAOK,UAAAC,YAAY,EAAI;AAAA,UACzBC,IADyB,GAChB,MAAKC,KADW,CACzBD,IADyB;AAEjCZ,MAAAA,KAAK,CAACc,OAAN;AACAF,MAAAA,IAAI,CAACG,cAAL,CAAoBJ,YAApB;;AACA,YAAKK,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,MAAKV,WAAL;AADE,OAAd;AAGD,KAda;;AAEZ,UAAKW,KAAL,GAAa;AAAED,MAAAA,QAAQ,EAAE,MAAKV,WAAL;AAAZ,KAAb;AAFY;AAGb;;;;6BAaQ;AAAA;;AAAA,UACCY,CADD,GACO,KAAKN,KADZ,CACCM,CADD;AAAA,UAECF,QAFD,GAEc,KAAKC,KAFnB,CAECD,QAFD;AAGP,UAAMG,WAAW,GAAG,CAClB;AACEC,QAAAA,KAAK,EAAEF,CAAC,CAAC,qBAAD,CADV;AAEEG,QAAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACZ,gBAAL,CAAsB,IAAtB,CAAN;AAAA,SAFX;AAGEN,QAAAA,IAAI,EAAE,IAHR;AAIEmB,QAAAA,UAAU,EAAE;AAJd,OADkB,EAOlB;AACEF,QAAAA,KAAK,EAAEF,CAAC,CAAC,qBAAD,CADV;AAEEG,QAAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACZ,gBAAL,CAAsB,IAAtB,CAAN;AAAA,SAFX;AAGEN,QAAAA,IAAI,EAAE,IAHR;AAIEmB,QAAAA,UAAU,EAAE;AAJd,OAPkB,CAApB;AAcA,0BACE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAEH,WAAnB;AAAgC,QAAA,KAAK,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,gCACPH,QAAQ,IAAIhB,SAAS,CAACgB,QAAD,CAArB,GAAkChB,SAAS,CAACgB,QAAD,CAAT,CAAoBb,IAAtD,GAA6D,IADtD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EA3C4BN,S;;AA8C/B,eAAeQ,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown } from '@util-components';\nimport { toast } from 'react-toastify';\n\nconst languages = {\n  en: {\n    id: 'en',\n    icon: 'us'\n  },\n  es: {\n    id: 'es',\n    icon: 'es'\n  },\n  'en-US': {\n    id: 'en-US',\n    icon: 'us'\n  }\n};\n\ntype Props = {\n  i18n: Object,\n  t: Function\n};\n\nclass LanguageDropdown extends Component<Props> {\n  constructor() {\n    super();\n    this.state = { language: this.getLanguage() };\n  }\n\n  getLanguage = () => localStorage.getItem('i18nextLng') || 'en';\n\n  onLanguageSelect = nextLanguage => {\n    const { i18n } = this.props;\n    toast.dismiss();\n    i18n.changeLanguage(nextLanguage);\n    this.setState({\n      language: this.getLanguage()\n    });\n  };\n\n  render() {\n    const { t } = this.props;\n    const { language } = this.state;\n    const profileOpts = [\n      {\n        label: t('navBar.languages.en'),\n        onClick: () => this.onLanguageSelect('en'),\n        icon: 'us',\n        customIcon: true\n      },\n      {\n        label: t('navBar.languages.es'),\n        onClick: () => this.onLanguageSelect('es'),\n        icon: 'es',\n        customIcon: true\n      }\n    ];\n    return (\n      <Dropdown actions={profileOpts} hover>\n        <div\n          className={`flag-icon flag-icon-${\n            language && languages[language] ? languages[language].icon : 'us'\n          }`}\n        />\n      </Dropdown>\n    );\n  }\n}\n\nexport default LanguageDropdown;\n"]},"metadata":{},"sourceType":"module"}