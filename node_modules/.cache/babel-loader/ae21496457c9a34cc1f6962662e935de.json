{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\src\\\\containers\\\\TextEditor\\\\text-editor.component.js\";\n\n/* eslint-disable constructor-super */\n\n/* eslint-disable no-nested-ternary */\n\n/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport { Loader } from \"../../components/Utils\";\nimport { useTranslation } from 'react-i18next';\nimport SolidAuth from 'solid-auth-client';\nimport { successToaster, errorToaster, languageHelper } from \"../../utils\";\nimport ldflex from '@solid/query-ldflex';\nimport { AccessControlList, ACLFactory } from '@inrupt/solid-react-components';\nimport { TextEditorWrapper, TextEditorContainer, Header, Form, FullGridSize, Button, Label, Input, TextArea, WebId } from \"./text-editor.style\";\nimport { ProfileContainer, ProfileWrapper, AutoSaveNotification } from \"../Profile/profile.style.js\";\nimport { FormModel } from '@inrupt/solid-react-components';\nimport { FormWrapper } from \"../FormModel/form-model.style\";\nimport { AutoSaveSpinner } from \"../../components\";\nvar language = languageHelper.getLanguageCode();\n\nfunction extractWacAllow(response) {\n  // WAC-Allow: user=\"read write append control\",public=\"read\"\n  var modes = {\n    user: {\n      read: false,\n      append: false,\n      write: false,\n      control: false\n    },\n    public: {\n      read: false,\n      append: false,\n      write: false,\n      control: false\n    }\n  };\n  var wacAllowHeader = response.headers.get('WAC-Allow');\n\n  if (wacAllowHeader) {\n    wacAllowHeader // 'user=\"read write append control\",public=\"read\"'\n    .split(',') // ['user=\"read write append control\"', 'public=\"read\"']\n    .map(function (str) {\n      return str.trim();\n    }).forEach(function (statement) {\n      // 'user=\"read write append control\"'\n      var parts = statement.split('='); // ['user', '\"read write control\"']\n\n      if (parts.length >= 2 && ['user', 'public'].indexOf(parts[0]) !== -1 && parts[1].length > 2) {\n        var modeStr = parts[1].replace(/\"/g, ''); // 'read write control' or ''\n\n        if (modeStr.length) {\n          modeStr.split(' ').forEach(function (mode) {\n            modes[parts[0]][mode] = true;\n          });\n        }\n      }\n    });\n  }\n\n  return modes;\n}\n\nexport var Editor = function Editor(_ref) {\n  var webId = _ref.webId;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      url = _useState2[0],\n      setUrl = _useState2[1];\n\n  var _useState3 = useState('https://example-friend.com/profile/card#me'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      friend = _useState4[0],\n      setFriend = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loaded = _useState8[0],\n      setLoaded = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editable = _useState10[0],\n      setEditable = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sharable = _useState12[0],\n      setSharable = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setIsLoading = _useState14[1];\n\n  function setUrlFromStorage() {\n    return _setUrlFromStorage.apply(this, arguments);\n  }\n\n  function _setUrlFromStorage() {\n    _setUrlFromStorage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var storageRoot, exampleUrl;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(webId && !url)) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 3;\n              return ldflex[webId].storage;\n\n            case 3:\n              storageRoot = _context2.sent;\n\n              if (storageRoot) {\n                exampleUrl = new URL(\"\".concat(storageRoot.value, \"pres/.ttl\"));\n                setUrl(exampleUrl);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _setUrlFromStorage.apply(this, arguments);\n  }\n\n  var _onError = function onError(e) {\n    if (e.message.toString().indexOf('Validation failed') < 0) {\n      errorToaster(t('formLanguage.renderer.formNotLoaded'), t('notifications.error'), {\n        label: t('errorFormRender.link.label'),\n        href: t('errorFormRender.link.href')\n      });\n      setIsLoading(false);\n    }\n  };\n\n  var _onDelete = function onDelete() {\n    successToaster(t('formLanguage.renderer.fieldDeleted'), t('notifications.success'));\n  };\n\n  var _onAddNewField = function onAddNewField() {\n    successToaster(t('formLanguage.renderer.fieldAdded'), t('notifications.success'));\n  };\n\n  useEffect(function () {\n    setUrlFromStorage();\n  }, [webId]);\n\n  function handleUrlChange(event) {\n    event.preventDefault();\n    setUrl(event.target.value);\n  }\n\n  function handleFriendChange(event) {\n    event.preventDefault();\n    setFriend(event.target.value);\n  }\n\n  function handleTextChange(event) {\n    event.preventDefault();\n    setText(event.target.value);\n  }\n\n  function handleLoad(event) {\n    event.preventDefault();\n    var doc = SolidAuth.fetch(url);\n    doc.then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n        var text, wacAllowModes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return response.text();\n\n              case 2:\n                text = _context.sent;\n\n                if (response.ok) {\n                  setText(text);\n                } else if (response.status === 404) {\n                  successToaster(t('notifications.404'));\n                } else {\n                  errorToaster(t('notifications.errorLoading'));\n                }\n\n                wacAllowModes = extractWacAllow(response);\n                setEditable(wacAllowModes.user.write);\n                setSharable(wacAllowModes.user.control);\n                setLoaded(true);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()).catch(function () {\n      errorToaster(t('notifications.errorFetching'));\n    });\n  } // assuming the logged in user doesn't change without a page refresh\n\n\n  function handleShare(_x2) {\n    return _handleShare.apply(this, arguments);\n  }\n\n  function _handleShare() {\n    _handleShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var permissions, ACLFile;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              _context3.prev = 1;\n              permissions = [{\n                agents: [friend],\n                modes: [AccessControlList.MODES.READ, AccessControlList.MODES.WRITE]\n              }];\n              _context3.next = 5;\n              return ACLFactory.createNewAcl(webId, url);\n\n            case 5:\n              ACLFile = _context3.sent;\n              _context3.next = 8;\n              return ACLFile.createACL(permissions);\n\n            case 8:\n              successToaster(t('notifications.accessGranted'));\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              errorToaster(t('notifications.errorGrantingAccess'));\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    }));\n    return _handleShare.apply(this, arguments);\n  }\n\n  function handleSave(_x3) {\n    return _handleSave.apply(this, arguments);\n  }\n\n  function _handleSave() {\n    _handleSave = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              event.preventDefault(); // Not using LDFlex here, because this is not an RDF document.\n\n              _context4.next = 3;\n              return SolidAuth.fetch(url, {\n                method: 'PUT',\n                body: '\\n@prefix : <#>.\\n@prefix solid: <http://www.w3.org/ns/solid/terms#>.\\n@prefix foaf: <http://xmlns.com/foaf/0.1/>.\\n@prefix pim: <http://www.w3.org/ns/pim/space#>.\\n@prefix schema: <http://schema.org/>.\\n@prefix ldp: <http://www.w3.org/ns/ldp#>.\\n@prefix pro: <./>.\\n@prefix n0: <http://www.w3.org/ns/auth/acl#>.\\n@prefix inbox: </inbox/>.\\n@prefix rit: </>.\\n@prefix n: <http://www.w3.org/2006/vcard/ns#>.\\n<> n:fn \"Enter name\"; n:role \"Enter role\".\\npro:card a foaf:PersonalProfileDocument; foaf:maker :me; foaf:primaryTopic :me n:fn \"ENter Name\".',\n                headers: {\n                  'Content-Type': 'text/turtle'\n                }\n              });\n\n            case 3:\n              result = _context4.sent;\n\n              if (result.ok) {\n                successToaster(t('notifications.saved'));\n              } else if (result.ok === false) {\n                errorToaster(t('notifications.errorSaving'));\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _handleSave.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FullGridSize, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoSaveNotification, {\n    className: \"banner-wrap--warning banner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner-wrap__content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon fa fa-exclamation-circle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }), t('profile.autosaveNotification'))), /*#__PURE__*/React.createElement(WebId, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"Connected as: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: webId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 27\n    }\n  }, webId)))), /*#__PURE__*/React.createElement(FullGridSize, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, t('editor.url'), \":\", /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    size: \"200\",\n    value: url,\n    onChange: handleUrlChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"ids-link-filled ids-link-filled--primary button\",\n    onClick: handleLoad,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, t('editor.load')), editable ? /*#__PURE__*/React.createElement(Button, {\n    className: \"ids-link-filled ids-link-filled--secondary button\",\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, t('editor.save')) : loaded ? t('notifications.notEditable') : '')), /*#__PURE__*/React.createElement(FullGridSize, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormModel, Object.assign({\n    modelSource: 'https://ritvik18.solid.community/public/profile.ttl#formRoot',\n    dataSource: url + '#me',\n    viewer: false,\n    onInit: function onInit() {\n      setIsLoading(true);\n    },\n    onLoaded: function onLoaded() {\n      setIsLoading(false);\n    },\n    onSuccess: function onSuccess() {},\n    onSave: function onSave() {},\n    onError: function onError(error) {\n      _onError(error);\n    },\n    onAddNewField: function onAddNewField(response) {\n      return _onAddNewField(response);\n    },\n    onDelete: function onDelete(response) {\n      return _onDelete(response);\n    },\n    options: {\n      theme: {\n        inputText: 'input-wrap',\n        inputCheckbox: 'sdk-checkbox checkbox',\n        form: 'inrupt-sdk-form',\n        childGroup: 'inrupt-form-group',\n        groupField: 'group-wrapper',\n        multipleField: 'multiple-wrapper'\n      },\n      autosave: true,\n      autosaveIndicator: AutoSaveSpinner,\n      language: language\n    }\n  }, {\n    liveUpdate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    absolute: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 30\n    }\n  }))), sharable && /*#__PURE__*/React.createElement(FullGridSize, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, t('editor.friend'), \":\", /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    size: \"200\",\n    value: friend,\n    onChange: handleFriendChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"ids-link-stroke ids-link-stroke--primary button\",\n    onClick: handleShare,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, t('editor.grantAccess'))), loaded && !sharable && t('notifications.notSharable'));\n};\n/**\n * A React component page that is displayed when there's no valid route. Users can click the button\n * to get back to the home/welcome page.\n */\n\nvar TextEditor = function TextEditor(_ref3) {\n  var webId = _ref3.webId;\n\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t;\n\n  console.log(webId);\n  return /*#__PURE__*/React.createElement(TextEditorWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextEditorContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, t('editor.explanation'))), /*#__PURE__*/React.createElement(Editor, {\n    webId: webId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/containers/TextEditor/text-editor.component.js"],"names":["React","useState","useEffect","Loader","useTranslation","SolidAuth","successToaster","errorToaster","languageHelper","ldflex","AccessControlList","ACLFactory","TextEditorWrapper","TextEditorContainer","Header","Form","FullGridSize","Button","Label","Input","TextArea","WebId","ProfileContainer","ProfileWrapper","AutoSaveNotification","FormModel","FormWrapper","AutoSaveSpinner","language","getLanguageCode","extractWacAllow","response","modes","user","read","append","write","control","public","wacAllowHeader","headers","get","split","map","str","trim","forEach","statement","parts","length","indexOf","modeStr","replace","mode","Editor","webId","t","url","setUrl","friend","setFriend","text","setText","loaded","setLoaded","editable","setEditable","sharable","setSharable","isLoading","setIsLoading","setUrlFromStorage","storage","storageRoot","exampleUrl","URL","value","onError","e","message","toString","label","href","onDelete","onAddNewField","handleUrlChange","event","preventDefault","target","handleFriendChange","handleTextChange","handleLoad","doc","fetch","then","ok","status","wacAllowModes","catch","handleShare","permissions","agents","MODES","READ","WRITE","createNewAcl","ACLFile","createACL","handleSave","method","body","result","modelSource","dataSource","viewer","onInit","onLoaded","onSuccess","onSave","error","options","theme","inputText","inputCheckbox","form","childGroup","groupField","multipleField","autosave","autosaveIndicator","TextEditor","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable constructor-super */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-console */\n\nimport React, { useState, useEffect } from 'react';\nimport { Loader } from '@util-components';\nimport { useTranslation } from 'react-i18next';\nimport SolidAuth from 'solid-auth-client';\nimport { successToaster, errorToaster , languageHelper } from '@utils';\nimport ldflex from '@solid/query-ldflex';\nimport { AccessControlList, ACLFactory } from '@inrupt/solid-react-components';\nimport {\n  TextEditorWrapper,\n  TextEditorContainer,\n  Header,\n  Form,\n  FullGridSize,\n  Button,\n  Label,\n  Input,\n  TextArea,\n  WebId\n} from './text-editor.style';\nimport {\n  ProfileContainer,\n  ProfileWrapper,\n  AutoSaveNotification,\n} from '../Profile/profile.style.js';\nimport { FormModel } from '@inrupt/solid-react-components';\nimport { FormWrapper } from '../FormModel/form-model.style';\nimport { AutoSaveSpinner } from '@components';\n\ntype Props = { webId: String };\nconst language = languageHelper.getLanguageCode();\nfunction extractWacAllow(response) {\n  // WAC-Allow: user=\"read write append control\",public=\"read\"\n  const modes = {\n    user: {\n      read: false,\n      append: false,\n      write: false,\n      control: false\n    },\n    public: {\n      read: false,\n      append: false,\n      write: false,\n      control: false\n    }\n  };\n  \n  const wacAllowHeader = response.headers.get('WAC-Allow');\n  if (wacAllowHeader) {\n    wacAllowHeader // 'user=\"read write append control\",public=\"read\"'\n      .split(',') // ['user=\"read write append control\"', 'public=\"read\"']\n      .map(str => str.trim())\n      .forEach(statement => {\n        // 'user=\"read write append control\"'\n        const parts = statement.split('='); // ['user', '\"read write control\"']\n        if (\n          parts.length >= 2 &&\n          ['user', 'public'].indexOf(parts[0]) !== -1 &&\n          parts[1].length > 2\n        ) {\n          const modeStr = parts[1].replace(/\"/g, ''); // 'read write control' or ''\n          if (modeStr.length) {\n            modeStr.split(' ').forEach(mode => {\n              modes[parts[0]][mode] = true;\n            });\n          }\n        }\n      });\n  }\n  return modes;\n}\n\nexport const Editor = ({ webId }: Props) => {\n  const { t } = useTranslation();\n  const [url, setUrl] = useState('');\n  const [friend, setFriend] = useState('https://example-friend.com/profile/card#me');\n  const [text, setText] = useState('');\n  const [loaded, setLoaded] = useState(false);\n  const [editable, setEditable] = useState(false);\n  const [sharable, setSharable] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  async function setUrlFromStorage() {\n    if (webId && !url) {\n      const storageRoot = await ldflex[webId].storage;\n      if (storageRoot) {\n        const exampleUrl = new URL(`${storageRoot.value}pres/.ttl`);\n        setUrl(exampleUrl);\n      }\n    }\n  }\n  const onError = e => {\n    if (e.message.toString().indexOf('Validation failed') < 0) {\n      errorToaster(t('formLanguage.renderer.formNotLoaded'), t('notifications.error'), {\n        label: t('errorFormRender.link.label'),\n        href: t('errorFormRender.link.href')\n      });\n      setIsLoading(false);\n    }\n  };\n\n  const onDelete = () => {\n    successToaster(t('formLanguage.renderer.fieldDeleted'), t('notifications.success'));\n  };\n\n  const onAddNewField = () => {\n    successToaster(t('formLanguage.renderer.fieldAdded'), t('notifications.success'));\n  };\n\n  useEffect(() => {\n    setUrlFromStorage();\n  }, [webId]);\n\n  function handleUrlChange(event) {\n    event.preventDefault();\n    setUrl(event.target.value);\n  }\n\n  function handleFriendChange(event) {\n    event.preventDefault();\n    setFriend(event.target.value);\n  }\n\n  function handleTextChange(event) {\n    event.preventDefault();\n    setText(event.target.value);\n  }\n\n  function handleLoad(event) {\n    event.preventDefault();\n    const doc = SolidAuth.fetch(url);\n    doc\n      .then(async response => {\n        const text = await response.text();\n        if (response.ok) {\n          setText(text);\n        } else if (response.status === 404) {\n          successToaster(t('notifications.404'));\n        } else {\n          errorToaster(t('notifications.errorLoading'));\n        }\n        const wacAllowModes = extractWacAllow(response);\n        setEditable(wacAllowModes.user.write);\n        setSharable(wacAllowModes.user.control);\n        setLoaded(true);\n      })\n      .catch(() => {\n        errorToaster(t('notifications.errorFetching'));\n      });\n  } // assuming the logged in user doesn't change without a page refresh\n\n  async function handleShare(event) {\n    event.preventDefault();\n    try {\n      const permissions = [\n        {\n          agents: [friend],\n          modes: [AccessControlList.MODES.READ, AccessControlList.MODES.WRITE]\n        }\n      ];\n      const ACLFile = await ACLFactory.createNewAcl(webId, url);\n      await ACLFile.createACL(permissions);\n      successToaster(t('notifications.accessGranted'));\n    } catch (e) {\n      errorToaster(t('notifications.errorGrantingAccess'));\n    }\n  }\n\n  async function handleSave(event) {\n    event.preventDefault();\n    // Not using LDFlex here, because this is not an RDF document.\n    const result = await SolidAuth.fetch(url, {\n      method: 'PUT',\n      body: '\\n@prefix : <#>.\\n@prefix solid: <http://www.w3.org/ns/solid/terms#>.\\n@prefix foaf: <http://xmlns.com/foaf/0.1/>.\\n@prefix pim: <http://www.w3.org/ns/pim/space#>.\\n@prefix schema: <http://schema.org/>.\\n@prefix ldp: <http://www.w3.org/ns/ldp#>.\\n@prefix pro: <./>.\\n@prefix n0: <http://www.w3.org/ns/auth/acl#>.\\n@prefix inbox: </inbox/>.\\n@prefix rit: </>.\\n@prefix n: <http://www.w3.org/2006/vcard/ns#>.\\n<> n:fn \"Enter name\"; n:role \"Enter role\".\\npro:card a foaf:PersonalProfileDocument; foaf:maker :me; foaf:primaryTopic :me n:fn \"ENter Name\".',\n      headers: {\n        'Content-Type': 'text/turtle'\n      }\n    });\n\n    if (result.ok) {\n      successToaster(t('notifications.saved'));\n    } else if (result.ok === false) {\n      errorToaster(t('notifications.errorSaving'));\n    }\n  }\n\n  return (\n    <Form>\n      <FullGridSize>\n      <AutoSaveNotification className=\"banner-wrap--warning banner\">\n              <div className=\"banner-wrap__content\">\n                <i className=\"icon fa fa-exclamation-circle\" />\n                {t('profile.autosaveNotification')}\n              </div>\n            </AutoSaveNotification>\n        <WebId>\n          <b>\n            Connected as: <a href={webId}>{webId}</a>\n          </b>\n        </WebId>\n      </FullGridSize>\n      <FullGridSize>\n        <Label>\n          {t('editor.url')}:\n          <Input type=\"text\" size=\"200\" value={url} onChange={handleUrlChange} />\n        </Label>\n        <div className=\"input-wrap\">\n          <Button className=\"ids-link-filled ids-link-filled--primary button\" onClick={handleLoad}>\n            {t('editor.load')}\n          </Button>\n          {editable ? (\n            <Button\n              className=\"ids-link-filled ids-link-filled--secondary button\"\n              onClick={handleSave}\n            >\n              {t('editor.save')}\n            </Button>\n          ) : loaded ? (\n            t('notifications.notEditable')\n          ) : (\n            ''\n          )}\n        </div>\n      </FullGridSize>\n      <FullGridSize>\n      <FormWrapper>\n              <FormModel\n                {...{\n                  modelSource: 'https://ritvik18.solid.community/public/profile.ttl#formRoot',\n                  dataSource: url+'#me',\n                  viewer: false,\n                  onInit: () => {\n                    setIsLoading(true);\n                  },\n                  onLoaded: () => {\n                    setIsLoading(false);\n                  },\n                  onSuccess: () => {},\n                  onSave: () => {},\n                  onError: error => {\n                    onError(error);\n                  },\n                  onAddNewField: response => onAddNewField(response),\n                  onDelete: response => onDelete(response),\n                  options: {\n                    theme: {\n                      inputText: 'input-wrap',\n                      inputCheckbox: 'sdk-checkbox checkbox',\n                      form: 'inrupt-sdk-form',\n                      childGroup: 'inrupt-form-group',\n                      groupField: 'group-wrapper',\n                      multipleField: 'multiple-wrapper'\n                    },\n                    autosave: true,\n                    autosaveIndicator: AutoSaveSpinner,\n                    language\n                  }\n                }}\n                liveUpdate\n              />\n               {isLoading && <Loader absolute />}\n            </FormWrapper>\n      </FullGridSize>\n      {sharable && (\n        <FullGridSize>\n          <Label>\n            {t('editor.friend')}:\n            <Input type=\"text\" size=\"200\" value={friend} onChange={handleFriendChange} />\n          </Label>\n          <Button className=\"ids-link-stroke ids-link-stroke--primary button\" onClick={handleShare}>\n            {t('editor.grantAccess')}\n          </Button>\n        </FullGridSize>\n      )}\n      {loaded && !sharable && t('notifications.notSharable')}\n    </Form>\n  );\n};\n\n/**\n * A React component page that is displayed when there's no valid route. Users can click the button\n * to get back to the home/welcome page.\n */\nconst TextEditor = ({ webId }: Props) => {\n  const { t } = useTranslation();\n  console.log(webId);\n  return (\n    <TextEditorWrapper>\n      <TextEditorContainer>\n        <Header>\n          <p>{t('editor.explanation')}</p>\n        </Header>\n        <Editor webId={webId} />\n      </TextEditorContainer>\n    </TextEditorWrapper>\n  );\n};\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}