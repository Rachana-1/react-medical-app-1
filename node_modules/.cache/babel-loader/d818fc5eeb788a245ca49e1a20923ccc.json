{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\src\\\\components\\\\NavBar\\\\children\\\\Toolbar\\\\toolbar.component.js\";\n\nimport React from 'react';\n\n/**\n * Checks if the components needs to rerender or not based on inbox changes\n * @param {Object} prevProps Previous props object\n * @param {Object} nextProps Next props object\n */\nvar areEqual = function areEqual(prevProps, nextProps) {\n  var prevInbox = prevProps && prevProps.toolbar.length > 1 && prevProps.toolbar[1].component().props.inbox;\n  var nextInbox = nextProps && nextProps.toolbar.length > 1 && nextProps.toolbar[1].component().props.inbox;\n\n  if (prevInbox && prevInbox.length !== nextInbox && nextInbox.length) {\n    return false;\n  }\n\n  if (prevProps.open !== nextProps.open) {\n    return false;\n  }\n\n  return true;\n};\n\nvar Toolbar = React.memo(function (_ref) {\n  var toolbar = _ref.toolbar,\n      open = _ref.open,\n      customClass = _ref.customClass;\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav nav__toolbar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, toolbar && toolbar.map(function (_ref2, i) {\n    var Component = _ref2.component,\n        props = _ref2.props;\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        key: i,\n        \"data-testid\": \"item\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        open: open,\n        customClass: customClass,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      })))\n    );\n  })));\n}, areEqual);\nexport default Toolbar;","map":{"version":3,"sources":["D:/Downloads/Test HTML/react-medical-app/src/components/NavBar/children/Toolbar/toolbar.component.js"],"names":["React","areEqual","prevProps","nextProps","prevInbox","toolbar","length","component","props","inbox","nextInbox","open","Toolbar","memo","customClass","map","i","Component"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAQA;;;;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,SAAS,GACbF,SAAS,IAAIA,SAAS,CAACG,OAAV,CAAkBC,MAAlB,GAA2B,CAAxC,IAA6CJ,SAAS,CAACG,OAAV,CAAkB,CAAlB,EAAqBE,SAArB,GAAiCC,KAAjC,CAAuCC,KADtF;AAEA,MAAMC,SAAS,GACbP,SAAS,IAAIA,SAAS,CAACE,OAAV,CAAkBC,MAAlB,GAA2B,CAAxC,IAA6CH,SAAS,CAACE,OAAV,CAAkB,CAAlB,EAAqBE,SAArB,GAAiCC,KAAjC,CAAuCC,KADtF;;AAGA,MAAIL,SAAS,IAAIA,SAAS,CAACE,MAAV,KAAqBI,SAAlC,IAA+CA,SAAS,CAACJ,MAA7D,EAAqE;AACnE,WAAO,KAAP;AACD;;AAED,MAAIJ,SAAS,CAACS,IAAV,KAAmBR,SAAS,CAACQ,IAAjC,EAAuC;AACrC,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,CAfD;;AAiBA,IAAMC,OAAO,GAAGZ,KAAK,CAACa,IAAN,CACd;AAAA,MAAGR,OAAH,QAAGA,OAAH;AAAA,MAAYM,IAAZ,QAAYA,IAAZ;AAAA,MAAkBG,WAAlB,QAAkBA,WAAlB;AAAA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,OAAO,IACNA,OAAO,CAACU,GAAR,CAAY,iBAAkCC,CAAlC;AAAA,QAAcC,SAAd,SAAGV,SAAH;AAAA,QAAyBC,KAAzB,SAAyBA,KAAzB;AAAA;AAAA;AACV;AACA;AAAI,QAAA,GAAG,EAAEQ,CAAT;AAAY,uBAAY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD,oBAAeR,KAAf;AAAsB,QAAA,IAAI,EAAEG,IAA5B;AAAkC,QAAA,WAAW,EAAEG,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAFU;AAAA,GAAZ,CAFJ,CADF,CADF;AAAA,CADc,EAcdb,QAdc,CAAhB;AAiBA,eAAeW,OAAf","sourcesContent":["import React from 'react';\n\ntype Props = {\n  toolbar: Array<Object>,\n  open: Boolean,\n  customClass: String\n};\n\n/**\n * Checks if the components needs to rerender or not based on inbox changes\n * @param {Object} prevProps Previous props object\n * @param {Object} nextProps Next props object\n */\nconst areEqual = (prevProps, nextProps) => {\n  const prevInbox =\n    prevProps && prevProps.toolbar.length > 1 && prevProps.toolbar[1].component().props.inbox;\n  const nextInbox =\n    nextProps && nextProps.toolbar.length > 1 && nextProps.toolbar[1].component().props.inbox;\n\n  if (prevInbox && prevInbox.length !== nextInbox && nextInbox.length) {\n    return false;\n  }\n\n  if (prevProps.open !== nextProps.open) {\n    return false;\n  }\n\n  return true;\n};\n\nconst Toolbar = React.memo(\n  ({ toolbar, open, customClass }: Props) => (\n    <nav className=\"nav nav__toolbar\">\n      <ul>\n        {toolbar &&\n          toolbar.map(({ component: Component, props }, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <li key={i} data-testid=\"item\">\n              <Component {...props} open={open} customClass={customClass} />\n            </li>\n          ))}\n      </ul>\n    </nav>\n  ),\n  areEqual\n);\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}