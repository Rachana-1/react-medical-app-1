{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\src\\\\components\\\\Notifications\\\\children\\\\NotificationsPanel\\\\children\\\\Tabs\\\\tabs.component.js\";\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { TabsContainer, Tab } from \"./tabs.styles\";\n\n/**\n * Filter notificatons by inbox name (Global, Game)\n * @param list\n * @param click\n * @param activeName\n * @returns {*}\n * @constructor\n */\nexport var Tabs = function Tabs(_ref) {\n  var list = _ref.list,\n      click = _ref.click,\n      activeName = _ref.activeName;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1];\n  /**\n   * Filter notification by inbox name\n   * @type {Function}\n   */\n\n\n  var filterByName = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n      var currentName;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              currentName = active === name ? '' : name;\n              setActive(currentName);\n              _context.next = 4;\n              return click(currentName);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [list, active]);\n  /**\n   * Set active inbox name on component mount\n   */\n\n  useEffect(function () {\n    setActive(activeName);\n  }, []);\n  return /*#__PURE__*/React.createElement(TabsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, list && list.map(function (tab) {\n    return /*#__PURE__*/React.createElement(Tab, {\n      key: tab.path,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return filterByName(tab.inboxName);\n      },\n      type: \"button\",\n      className: active === tab.inboxName ? 'active' : '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, tab.inboxName));\n  }));\n};","map":{"version":3,"sources":["D:/Downloads/Test HTML/react-medical-app/src/components/Notifications/children/NotificationsPanel/children/Tabs/tabs.component.js"],"names":["React","useCallback","useState","useEffect","TabsContainer","Tab","Tabs","list","click","activeName","active","setActive","filterByName","name","currentName","map","tab","path","inboxName"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,aAAT,EAAwBC,GAAxB;;AAOA;;;;;;;;AAQA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAwC;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;;AAAA,kBAC9BP,QAAQ,CAAC,IAAD,CADsB;AAAA;AAAA,MACnDQ,MADmD;AAAA,MAC3CC,SAD2C;AAG1D;;;;;;AAIA,MAAMC,YAAY,GAAGX,WAAW;AAAA,yEAC9B,iBAAMY,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,WADR,GACsBJ,MAAM,KAAKG,IAAX,GAAkB,EAAlB,GAAuBA,IAD7C;AAGEF,cAAAA,SAAS,CAACG,WAAD,CAAT;AAHF;AAAA,qBAIQN,KAAK,CAACM,WAAD,CAJb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD8B;;AAAA;AAAA;AAAA;AAAA,OAO9B,CAACP,IAAD,EAAOG,MAAP,CAP8B,CAAhC;AAUA;;;;AAGAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,SAAS,CAACF,UAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,IACHA,IAAI,CAACQ,GAAL,CAAS,UAAAC,GAAG;AAAA,wBACV,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE;AAAA,eAAML,YAAY,CAACI,GAAG,CAACE,SAAL,CAAlB;AAAA,OADX;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAER,MAAM,KAAKM,GAAG,CAACE,SAAf,GAA2B,QAA3B,GAAsC,EAHnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGF,GAAG,CAACE,SALP,CADF,CADU;AAAA,GAAZ,CAFJ,CADF;AAgBD,CAxCM","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { TabsContainer, Tab } from './tabs.styles';\n\ntype Props = {\n  activeName: string,\n  list: Array<Object>,\n  click: () => void\n};\n/**\n * Filter notificatons by inbox name (Global, Game)\n * @param list\n * @param click\n * @param activeName\n * @returns {*}\n * @constructor\n */\nexport const Tabs = ({ list, click, activeName }: Props) => {\n  const [active, setActive] = useState(null);\n\n  /**\n   * Filter notification by inbox name\n   * @type {Function}\n   */\n  const filterByName = useCallback(\n    async name => {\n      const currentName = active === name ? '' : name;\n\n      setActive(currentName);\n      await click(currentName);\n    },\n    [list, active]\n  );\n\n  /**\n   * Set active inbox name on component mount\n   */\n  useEffect(() => {\n    setActive(activeName);\n  }, []);\n\n  return (\n    <TabsContainer>\n      {list &&\n        list.map(tab => (\n          <Tab key={tab.path}>\n            <button\n              onClick={() => filterByName(tab.inboxName)}\n              type=\"button\"\n              className={active === tab.inboxName ? 'active' : ''}\n            >\n              {tab.inboxName}\n            </button>\n          </Tab>\n        ))}\n    </TabsContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}