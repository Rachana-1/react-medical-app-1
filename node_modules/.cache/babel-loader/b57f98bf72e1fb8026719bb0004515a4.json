{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\src\\\\components\\\\Utils\\\\ConfirmationDialog\\\\confirmation-dialog.component.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport { Content, Actions, AcceptBtn, DeclineBtn } from \"./confirmation-dialog.style\";\n\n/**\n * Check if we are running test to avoid issue with React Modal\n */\nif (process.env.NODE_ENV !== 'test') ReactModal.setAppElement('#root');\n\nvar ConfirmationDialog = function ConfirmationDialog(_ref) {\n  var onAccept = _ref.onAccept,\n      onDecline = _ref.onDecline,\n      options = _ref.options,\n      parentSelector = _ref.parentSelector;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var message = options.message,\n      MessageComponent = options.messageComponent,\n      acceptText = options.acceptText,\n      declineText = options.declineText;\n\n  var Accept = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return onAccept();\n\n            case 2:\n              setIsOpen(false);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function Accept() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var Decline = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return onDecline();\n\n            case 2:\n              setIsOpen(false);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function Decline() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getParent = function getParent() {\n    return document.querySelector(parentSelector);\n  };\n\n  useEffect(function () {\n    setIsOpen(true);\n  }, []);\n  return /*#__PURE__*/React.createElement(ReactModal, {\n    isOpen: isOpen,\n    ariaHideApp: false,\n    parentSelector: getParent,\n    overlayClassName: \"modal-overlay\",\n    className: \"modal-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, MessageComponent ? /*#__PURE__*/React.createElement(MessageComponent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 34\n    }\n  }) : message), /*#__PURE__*/React.createElement(Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DeclineBtn, {\n    type: \"button\",\n    onClick: Decline,\n    \"data-testid\": \"declineButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, declineText || 'Decline'), /*#__PURE__*/React.createElement(AcceptBtn, {\n    type: \"button\",\n    onClick: Accept,\n    \"data-testid\": \"acceptButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, acceptText || 'Accept'))));\n};\n\nConfirmationDialog.defaultProps = {\n  parentSelector: '#root'\n};\nexport default ConfirmationDialog;","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/components/Utils/ConfirmationDialog/confirmation-dialog.component.js"],"names":["React","useState","useEffect","ReactModal","Content","Actions","AcceptBtn","DeclineBtn","process","env","NODE_ENV","setAppElement","ConfirmationDialog","onAccept","onDecline","options","parentSelector","isOpen","setIsOpen","message","MessageComponent","messageComponent","acceptText","declineText","Accept","Decline","getParent","document","querySelector","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport { Content, Actions, AcceptBtn, DeclineBtn } from './confirmation-dialog.style';\n\ntype Props = {\n  onAccept: Function,\n  onDecline: Function,\n  options: Object,\n  parentSelector?: String\n};\n\n/**\n * Check if we are running test to avoid issue with React Modal\n */\nif (process.env.NODE_ENV !== 'test') ReactModal.setAppElement('#root');\n\nconst ConfirmationDialog = ({ onAccept, onDecline, options, parentSelector }: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { message, messageComponent: MessageComponent, acceptText, declineText } = options;\n\n  const Accept = async () => {\n    await onAccept();\n    setIsOpen(false);\n  };\n\n  const Decline = async () => {\n    await onDecline();\n    setIsOpen(false);\n  };\n\n  const getParent = () => document.querySelector(parentSelector);\n\n  useEffect(() => {\n    setIsOpen(true);\n  }, []);\n\n  return (\n    <ReactModal\n      isOpen={isOpen}\n      ariaHideApp={false}\n      parentSelector={getParent}\n      overlayClassName=\"modal-overlay\"\n      className=\"modal-content\"\n    >\n      <Content>\n        <div>{MessageComponent ? <MessageComponent /> : message}</div>\n        <Actions>\n          <DeclineBtn type=\"button\" onClick={Decline} data-testid=\"declineButton\">\n            {declineText || 'Decline'}\n          </DeclineBtn>\n          <AcceptBtn type=\"button\" onClick={Accept} data-testid=\"acceptButton\">\n            {acceptText || 'Accept'}\n          </AcceptBtn>\n        </Actions>\n      </Content>\n    </ReactModal>\n  );\n};\n\nConfirmationDialog.defaultProps = {\n  parentSelector: '#root'\n};\n\nexport default ConfirmationDialog;\n"]},"metadata":{},"sourceType":"module"}