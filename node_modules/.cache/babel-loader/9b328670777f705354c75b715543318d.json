{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\src\\\\containers\\\\TextEditor\\\\text-editor.component.js\";\n\n/* eslint-disable constructor-super */\n\n/* eslint-disable no-nested-ternary */\n\n/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SolidAuth from 'solid-auth-client';\nimport { successToaster, errorToaster } from \"../../utils\";\nimport ldflex from '@solid/query-ldflex';\nimport { AccessControlList, ACLFactory, FormModel } from '@inrupt/solid-react-components';\nimport { TextEditorWrapper, TextEditorContainer, Form, FullGridSize, Button, Label, Input, TextArea } from \"./text-editor.style\";\nimport { Header, ProfileContainer, ProfileWrapper, AutoSaveNotification, WebId } from \"../Profile/profile.style.js\";\nimport { FormWrapper } from \"../FormModel/form-model.style\";\n\nfunction extractWacAllow(response) {\n  // WAC-Allow: user=\"read write append control\",public=\"read\"\n  var modes = {\n    user: {\n      read: false,\n      append: false,\n      write: false,\n      control: false\n    },\n    public: {\n      read: false,\n      append: false,\n      write: false,\n      control: false\n    }\n  };\n  var wacAllowHeader = response.headers.get('WAC-Allow');\n\n  if (wacAllowHeader) {\n    wacAllowHeader // 'user=\"read write append control\",public=\"read\"'\n    .split(',') // ['user=\"read write append control\"', 'public=\"read\"']\n    .map(function (str) {\n      return str.trim();\n    }).forEach(function (statement) {\n      // 'user=\"read write append control\"'\n      var parts = statement.split('='); // ['user', '\"read write control\"']\n\n      if (parts.length >= 2 && ['user', 'public'].indexOf(parts[0]) !== -1 && parts[1].length > 2) {\n        var modeStr = parts[1].replace(/\"/g, ''); // 'read write control' or ''\n\n        if (modeStr.length) {\n          modeStr.split(' ').forEach(function (mode) {\n            modes[parts[0]][mode] = true;\n          });\n        }\n      }\n    });\n  }\n\n  return modes;\n}\n\nexport var Editor = function Editor(_ref) {\n  var webId = _ref.webId;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      url = _useState2[0],\n      setUrl = _useState2[1];\n\n  var _useState3 = useState('https://example-friend.com/profile/card#me'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      friend = _useState4[0],\n      setFriend = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loaded = _useState8[0],\n      setLoaded = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editable = _useState10[0],\n      setEditable = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sharable = _useState12[0],\n      setSharable = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setIsLoading = _useState14[1];\n\n  function setUrlFromStorage() {\n    return _setUrlFromStorage.apply(this, arguments);\n  }\n\n  function _setUrlFromStorage() {\n    _setUrlFromStorage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var storageRoot, exampleUrl;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(webId && !url)) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 3;\n              return ldflex[webId].storage;\n\n            case 3:\n              storageRoot = _context2.sent;\n\n              if (storageRoot) {\n                exampleUrl = new URL(\"\".concat(storageRoot.value, \"share/some-doc.txt\"));\n                setUrl(exampleUrl);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _setUrlFromStorage.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    setUrlFromStorage();\n  }, [webId]);\n\n  function handleUrlChange(event) {\n    event.preventDefault();\n    setUrl(event.target.value);\n  }\n\n  function handleFriendChange(event) {\n    event.preventDefault();\n    setFriend(event.target.value);\n  }\n\n  function handleTextChange(event) {\n    event.preventDefault();\n    setText(event.target.value);\n  }\n\n  function handleLoad(event) {\n    event.preventDefault();\n    var doc = SolidAuth.fetch(url);\n    doc.then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n        var text, wacAllowModes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return response.text();\n\n              case 2:\n                text = _context.sent;\n\n                if (response.ok) {\n                  setText(text);\n                } else if (response.status === 404) {\n                  successToaster(t('notifications.404'));\n                } else {\n                  errorToaster(t('notifications.errorLoading'));\n                }\n\n                wacAllowModes = extractWacAllow(response);\n                setEditable(wacAllowModes.user.write);\n                setSharable(wacAllowModes.user.control);\n                setLoaded(true);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()).catch(function () {\n      errorToaster(t('notifications.errorFetching'));\n    });\n  } // assuming the logged in user doesn't change without a page refresh\n\n\n  function handleShare(_x2) {\n    return _handleShare.apply(this, arguments);\n  }\n\n  function _handleShare() {\n    _handleShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var permissions, ACLFile;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              _context3.prev = 1;\n              permissions = [{\n                agents: [friend],\n                modes: [AccessControlList.MODES.READ, AccessControlList.MODES.WRITE]\n              }];\n              _context3.next = 5;\n              return ACLFactory.createNewAcl(webId, url);\n\n            case 5:\n              ACLFile = _context3.sent;\n              _context3.next = 8;\n              return ACLFile.createACL(permissions);\n\n            case 8:\n              successToaster(t('notifications.accessGranted'));\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              errorToaster(t('notifications.errorGrantingAccess'));\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    }));\n    return _handleShare.apply(this, arguments);\n  }\n\n  function handleSave(_x3) {\n    return _handleSave.apply(this, arguments);\n  }\n\n  function _handleSave() {\n    _handleSave = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              event.preventDefault(); // Not using LDFlex here, because this is not an RDF document.\n\n              _context4.next = 3;\n              return SolidAuth.fetch(url, {\n                method: 'PUT',\n                body: text,\n                headers: {\n                  'Content-Type': 'text/plain'\n                }\n              });\n\n            case 3:\n              result = _context4.sent;\n\n              if (result.ok) {\n                successToaster(t('notifications.saved'));\n              } else if (result.ok === false) {\n                errorToaster(t('notifications.errorSaving'));\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _handleSave.apply(this, arguments);\n  }\n\n  var _onAddNewField = function onAddNewField() {\n    successToaster(t('formLanguage.renderer.fieldAdded'), t('notifications.success'));\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FullGridSize, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WebId, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Connected as: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: webId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 27\n    }\n  }, webId)))), /*#__PURE__*/React.createElement(FullGridSize, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, t('editor.url'), \":\", /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    size: \"200\",\n    value: url,\n    onChange: handleUrlChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"ids-link-filled ids-link-filled--primary button\",\n    onClick: handleLoad,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, t('editor.load')), editable ? /*#__PURE__*/React.createElement(Button, {\n    className: \"ids-link-filled ids-link-filled--secondary button\",\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, t('editor.save')) : loaded ? t('notifications.notEditable') : '')), /*#__PURE__*/React.createElement(FullGridSize, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormModel, Object.assign({\n    modelSource: 'https://ritvik18.solid.community/public/profile.ttl#formRoot',\n    dataSource: webId,\n    viewer: false,\n    onInit: function onInit() {\n      setIsLoading(true);\n    },\n    onLoaded: function onLoaded() {\n      setIsLoading(false);\n    },\n    onSuccess: function onSuccess() {},\n    onSave: function onSave() {},\n    onAddNewField: function onAddNewField(response) {\n      return _onAddNewField(response);\n    },\n    onDelete: function (_onDelete) {\n      function onDelete(_x4) {\n        return _onDelete.apply(this, arguments);\n      }\n\n      onDelete.toString = function () {\n        return _onDelete.toString();\n      };\n\n      return onDelete;\n    }(function (response) {\n      return onDelete(response);\n    }),\n    options: {\n      theme: {\n        inputText: 'input-wrap',\n        inputCheckbox: 'sdk-checkbox checkbox',\n        form: 'inrupt-sdk-form',\n        childGroup: 'inrupt-form-group',\n        groupField: 'group-wrapper',\n        multipleField: 'multiple-wrapper'\n      },\n      autosave: true,\n      autosaveIndicator: AutoSaveSpinner,\n      language: language\n    }\n  }, {\n    liveUpdate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  })))), sharable && /*#__PURE__*/React.createElement(FullGridSize, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, t('editor.friend'), \":\", /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    size: \"200\",\n    value: friend,\n    onChange: handleFriendChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"ids-link-stroke ids-link-stroke--primary button\",\n    onClick: handleShare,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, t('editor.grantAccess'))), loaded && !sharable && t('notifications.notSharable'));\n};\n/**\n * A React component page that is displayed when there's no valid route. Users can click the button\n * to get back to the home/welcome page.\n */\n\nvar TextEditor = function TextEditor(_ref3) {\n  var webId = _ref3.webId;\n\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t;\n\n  console.log(webId);\n  return /*#__PURE__*/React.createElement(TextEditorWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextEditorContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, t('editor.explanation'))), /*#__PURE__*/React.createElement(Editor, {\n    webId: webId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/containers/TextEditor/text-editor.component.js"],"names":["React","useState","useEffect","useTranslation","SolidAuth","successToaster","errorToaster","ldflex","AccessControlList","ACLFactory","FormModel","TextEditorWrapper","TextEditorContainer","Form","FullGridSize","Button","Label","Input","TextArea","Header","ProfileContainer","ProfileWrapper","AutoSaveNotification","WebId","FormWrapper","extractWacAllow","response","modes","user","read","append","write","control","public","wacAllowHeader","headers","get","split","map","str","trim","forEach","statement","parts","length","indexOf","modeStr","replace","mode","Editor","webId","t","url","setUrl","friend","setFriend","text","setText","loaded","setLoaded","editable","setEditable","sharable","setSharable","isLoading","setIsLoading","setUrlFromStorage","storage","storageRoot","exampleUrl","URL","value","handleUrlChange","event","preventDefault","target","handleFriendChange","handleTextChange","handleLoad","doc","fetch","then","ok","status","wacAllowModes","catch","handleShare","permissions","agents","MODES","READ","WRITE","createNewAcl","ACLFile","createACL","handleSave","method","body","result","onAddNewField","modelSource","dataSource","viewer","onInit","onLoaded","onSuccess","onSave","onDelete","options","theme","inputText","inputCheckbox","form","childGroup","groupField","multipleField","autosave","autosaveIndicator","AutoSaveSpinner","language","TextEditor","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable constructor-super */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-console */\n\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SolidAuth from 'solid-auth-client';\nimport { successToaster, errorToaster } from '@utils';\nimport ldflex from '@solid/query-ldflex';\nimport { AccessControlList, ACLFactory, FormModel } from '@inrupt/solid-react-components';\nimport {\n  TextEditorWrapper,\n  TextEditorContainer,\n  Form,\n  FullGridSize,\n  Button,\n  Label,\n  Input,\n  TextArea\n} from './text-editor.style';\nimport {\n  Header,\n  ProfileContainer,\n  ProfileWrapper,\n  AutoSaveNotification,\n  WebId\n} from '../Profile/profile.style.js';\nimport { FormWrapper } from '../FormModel/form-model.style';\n\ntype Props = { webId: String };\n\nfunction extractWacAllow(response) {\n  // WAC-Allow: user=\"read write append control\",public=\"read\"\n  const modes = {\n    user: {\n      read: false,\n      append: false,\n      write: false,\n      control: false\n    },\n    public: {\n      read: false,\n      append: false,\n      write: false,\n      control: false\n    }\n  };\n  const wacAllowHeader = response.headers.get('WAC-Allow');\n  if (wacAllowHeader) {\n    wacAllowHeader // 'user=\"read write append control\",public=\"read\"'\n      .split(',') // ['user=\"read write append control\"', 'public=\"read\"']\n      .map(str => str.trim())\n      .forEach(statement => {\n        // 'user=\"read write append control\"'\n        const parts = statement.split('='); // ['user', '\"read write control\"']\n        if (\n          parts.length >= 2 &&\n          ['user', 'public'].indexOf(parts[0]) !== -1 &&\n          parts[1].length > 2\n        ) {\n          const modeStr = parts[1].replace(/\"/g, ''); // 'read write control' or ''\n          if (modeStr.length) {\n            modeStr.split(' ').forEach(mode => {\n              modes[parts[0]][mode] = true;\n            });\n          }\n        }\n      });\n  }\n  return modes;\n}\n\nexport const Editor = ({ webId }: Props) => {\n  const { t } = useTranslation();\n  const [url, setUrl] = useState('');\n  const [friend, setFriend] = useState('https://example-friend.com/profile/card#me');\n  const [text, setText] = useState('');\n  const [loaded, setLoaded] = useState(false);\n  const [editable, setEditable] = useState(false);\n  const [sharable, setSharable] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  \n \n  async function setUrlFromStorage() {\n    if (webId && !url) {\n      const storageRoot = await ldflex[webId].storage;\n      if (storageRoot) {\n        const exampleUrl = new URL(`${storageRoot.value}share/some-doc.txt`);\n        setUrl(exampleUrl);\n      }\n    }\n  }\n\n  useEffect(() => {\n    setUrlFromStorage();\n  }, [webId]);\n\n  function handleUrlChange(event) {\n    event.preventDefault();\n    setUrl(event.target.value);\n  }\n\n  function handleFriendChange(event) {\n    event.preventDefault();\n    setFriend(event.target.value);\n  }\n\n  function handleTextChange(event) {\n    event.preventDefault();\n    setText(event.target.value);\n  }\n\n  function handleLoad(event) {\n    event.preventDefault();\n    const doc = SolidAuth.fetch(url);\n    doc\n      .then(async response => {\n        const text = await response.text();\n        if (response.ok) {\n          setText(text);\n        } else if (response.status === 404) {\n          successToaster(t('notifications.404'));\n        } else {\n          errorToaster(t('notifications.errorLoading'));\n        }\n        const wacAllowModes = extractWacAllow(response);\n        setEditable(wacAllowModes.user.write);\n        setSharable(wacAllowModes.user.control);\n        setLoaded(true);\n      })\n      .catch(() => {\n        errorToaster(t('notifications.errorFetching'));\n      });\n  } // assuming the logged in user doesn't change without a page refresh\n\n  async function handleShare(event) {\n    event.preventDefault();\n    try {\n      const permissions = [\n        {\n          agents: [friend],\n          modes: [AccessControlList.MODES.READ, AccessControlList.MODES.WRITE]\n        }\n      ];\n      const ACLFile = await ACLFactory.createNewAcl(webId, url);\n      await ACLFile.createACL(permissions);\n      successToaster(t('notifications.accessGranted'));\n    } catch (e) {\n      errorToaster(t('notifications.errorGrantingAccess'));\n    }\n  }\n\n  async function handleSave(event) {\n    event.preventDefault();\n    // Not using LDFlex here, because this is not an RDF document.\n    const result = await SolidAuth.fetch(url, {\n      method: 'PUT',\n      body: text,\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    });\n\n    if (result.ok) {\n      successToaster(t('notifications.saved'));\n    } else if (result.ok === false) {\n      errorToaster(t('notifications.errorSaving'));\n    }\n  }\n  const onAddNewField = () => {\n    successToaster(t('formLanguage.renderer.fieldAdded'), t('notifications.success'));\n  };\n  return (\n    <Form>\n      <FullGridSize>\n        <WebId>\n          <b>\n            Connected as: <a href={webId}>{webId}</a>\n          </b>\n        </WebId>\n      </FullGridSize>\n      <FullGridSize>\n        <Label>\n          {t('editor.url')}:\n          <Input type=\"text\" size=\"200\" value={url} onChange={handleUrlChange} />\n        </Label>\n        <div className=\"input-wrap\">\n          <Button className=\"ids-link-filled ids-link-filled--primary button\" onClick={handleLoad}>\n            {t('editor.load')}\n          </Button>\n          {editable ? (\n            <Button\n              className=\"ids-link-filled ids-link-filled--secondary button\"\n              onClick={handleSave}\n            >\n              {t('editor.save')}\n            </Button>\n          ) : loaded ? (\n            t('notifications.notEditable')\n          ) : (\n            ''\n          )}\n        </div>\n      </FullGridSize>\n      <FullGridSize>\n      <FormWrapper>\n              <FormModel\n                {...{\n                  modelSource: 'https://ritvik18.solid.community/public/profile.ttl#formRoot',\n                  dataSource: webId,\n                  viewer: false,\n                  onInit: () => {\n                    setIsLoading(true);\n                  },\n                  onLoaded: () => {\n                    setIsLoading(false);\n                  },\n                  onSuccess: () => {},\n                  onSave: () => {},\n          \n                  onAddNewField: response => onAddNewField(response),\n                  onDelete: response => onDelete(response),\n                  options: {\n                    theme: {\n                      inputText: 'input-wrap',\n                      inputCheckbox: 'sdk-checkbox checkbox',\n                      form: 'inrupt-sdk-form',\n                      childGroup: 'inrupt-form-group',\n                      groupField: 'group-wrapper',\n                      multipleField: 'multiple-wrapper'\n                    },\n                    autosave: true,\n                    autosaveIndicator: AutoSaveSpinner,\n                    language\n                  }\n                }}\n                liveUpdate\n              />\n            </FormWrapper>\n      </FullGridSize>\n      {sharable && (\n        <FullGridSize>\n          <Label>\n            {t('editor.friend')}:\n            <Input type=\"text\" size=\"200\" value={friend} onChange={handleFriendChange} />\n          </Label>\n          <Button className=\"ids-link-stroke ids-link-stroke--primary button\" onClick={handleShare}>\n            {t('editor.grantAccess')}\n          </Button>\n        </FullGridSize>\n      )}\n      {loaded && !sharable && t('notifications.notSharable')}\n    </Form>\n  );\n};\n\n/**\n * A React component page that is displayed when there's no valid route. Users can click the button\n * to get back to the home/welcome page.\n */\nconst TextEditor = ({ webId }: Props) => {\n  const { t } = useTranslation();\n  console.log(webId);\n  return (\n    <TextEditorWrapper>\n      <TextEditorContainer>\n        <Header>\n          <p>{t('editor.explanation')}</p>\n        </Header>\n        <Editor webId={webId} />\n      </TextEditorContainer>\n    </TextEditorWrapper>\n  );\n};\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}