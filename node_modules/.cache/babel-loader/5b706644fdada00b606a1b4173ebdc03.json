{"ast":null,"code":"import _classCallCheck from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Component } from 'react';\n\n/**\n * ErrorBoundary component to catch React component errors\n * You can use you own markup to show Error in your components\n */\nvar ErrorBoundary = /*#__PURE__*/function (_Component) {\n  _inherits(ErrorBoundary, _Component);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorBoundary).call(this, props));\n    _this.state = {\n      hasError: false,\n      error: null,\n      info: null\n    };\n    return _this;\n  } // Catch error and update state to render custom error component\n\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      this.setState({\n        hasError: true,\n        error: error,\n        info: info\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          hasError = _this$state.hasError,\n          error = _this$state.error,\n          info = _this$state.info;\n      var _this$props = this.props,\n          component = _this$props.component,\n          children = _this$props.children;\n      return hasError ? component(error, info) : children;\n    }\n  }]);\n\n  return ErrorBoundary;\n}(Component);\n\nexport { ErrorBoundary as default };","map":{"version":3,"sources":["D:/Downloads/Test HTML/react-medical-app/src/components/ErrorBoundary/error-boundary.component.js"],"names":["Component","ErrorBoundary","props","state","hasError","error","info","setState","component","children"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAOA;;;;IAIqBC,a;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAFiB;AAOlB,G,CAED;;;;;sCACkBD,K,EAAOC,I,EAAM;AAC7B,WAAKC,QAAL,CAAc;AACZH,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAALA,KAFY;AAGZC,QAAAA,IAAI,EAAJA;AAHY,OAAd;AAKD;;;6BAEQ;AAAA,wBAC2B,KAAKH,KADhC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,IADlB,eACkBA,IADlB;AAAA,wBAEyB,KAAKJ,KAF9B;AAAA,UAECM,SAFD,eAECA,SAFD;AAAA,UAEYC,QAFZ,eAEYA,QAFZ;AAGP,aAAOL,QAAQ,GAAGI,SAAS,CAACH,KAAD,EAAQC,IAAR,CAAZ,GAA4BG,QAA3C;AACD;;;;EAvBwCT,S;;SAAtBC,a","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  children: Node,\n  component: (error: String, info: Object) => Node\n};\n\n/**\n * ErrorBoundary component to catch React component errors\n * You can use you own markup to show Error in your components\n */\nexport default class ErrorBoundary extends Component<Props> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      info: null\n    };\n  }\n\n  // Catch error and update state to render custom error component\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true,\n      error,\n      info\n    });\n  }\n\n  render() {\n    const { hasError, error, info } = this.state;\n    const { component, children } = this.props;\n    return hasError ? component(error, info) : children;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}