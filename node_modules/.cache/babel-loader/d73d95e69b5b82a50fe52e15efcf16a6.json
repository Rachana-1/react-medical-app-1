{"ast":null,"code":"/**\n * Helper function to get language string from i18n library\n * @returns {string}\n */\nexport var getLanguageCode = function getLanguageCode() {\n  var language = localStorage.getItem('i18nextLng') || 'en'; // Quick fix for an issue where the i18n library sometimes uses en-US instead of en\n\n  if (language === 'en-US') {\n    language = 'en';\n  }\n\n  return language;\n};","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/utils/language.js"],"names":["getLanguageCode","language","localStorage","getItem"],"mappings":"AAAA;;;;AAIA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,MAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IAArD,CADmC,CAGnC;;AACA,MAAIF,QAAQ,KAAK,OAAjB,EAA0B;AACxBA,IAAAA,QAAQ,GAAG,IAAX;AACD;;AACD,SAAOA,QAAP;AACD,CARM","sourcesContent":["/**\n * Helper function to get language string from i18n library\n * @returns {string}\n */\nexport const getLanguageCode = () => {\n  let language = localStorage.getItem('i18nextLng') || 'en';\n\n  // Quick fix for an issue where the i18n library sometimes uses en-US instead of en\n  if (language === 'en-US') {\n    language = 'en';\n  }\n  return language;\n};\n"]},"metadata":{},"sourceType":"module"}