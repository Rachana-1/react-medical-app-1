{"ast":null,"code":"import _slicedToArray from \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\react-medical-app\\\\src\\\\components\\\\NavBar\\\\nav-bar.component.js\";\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navigation, Toolbar, HamburgerButton, MobileNavigation } from \"./children\";\n\nvar NavBar = function NavBar(props) {\n  var navigation = props.navigation,\n      toolbar = props.toolbar,\n      sticky = props.sticky,\n      t = props.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenMobile = _useState2[0],\n      setOpenMobile = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profileOptions = _useState4[0],\n      setProfileOption = _useState4[1];\n\n  var componentElement = React.createRef();\n\n  var setNavFixed = function setNavFixed() {\n    if (componentElement) {\n      var navHeight = 4;\n      var content = document.getElementsByClassName('contentApp');\n\n      if (content.length > 0) {\n        content[0].style['padding-top'] = \"\".concat(navHeight, \"px\");\n      }\n    }\n  };\n\n  var onComponentResize = function onComponentResize() {\n    setNavFixed();\n    window.addEventListener('resize', function () {\n      setNavFixed();\n\n      if (window.innerWidth >= 1024 && isOpenMobile) {\n        setOpenMobile(false);\n      }\n    });\n  };\n\n  var getUserProfileOptions = function getUserProfileOptions() {\n    var profile = toolbar ? toolbar.filter(function (bar) {\n      return bar.id !== 'language';\n    }) : [];\n    setProfileOption(profile);\n  };\n\n  useEffect(function () {\n    if (sticky) {\n      onComponentResize();\n    }\n\n    getUserProfileOptions();\n  }, [props, isOpenMobile]);\n\n  var toggleMobileMenu = function toggleMobileMenu() {\n    setOpenMobile(!isOpenMobile);\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    role: \"navigation\",\n    className: \"header header__desktop fixed\",\n    ref: componentElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"header-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/welcome\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/img/inrupt.svg\",\n    alt: \"inrupt\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))), isOpenMobile ? /*#__PURE__*/React.createElement(MobileNavigation, {\n    navigation: navigation,\n    toolbar: toolbar,\n    isOpenMobile: isOpenMobile,\n    toggleMobileMenu: toggleMobileMenu,\n    t: t,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    toolbar: profileOptions,\n    open: true,\n    customClass: \"profile-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, navigation && /*#__PURE__*/React.createElement(Navigation, {\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 28\n    }\n  }), toolbar && /*#__PURE__*/React.createElement(Toolbar, {\n    toolbar: toolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(HamburgerButton, {\n    toggleMobileMenu: toggleMobileMenu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n};\n\nNavBar.defaultProps = {\n  sticky: true\n};\nexport default NavBar;","map":{"version":3,"sources":["D:/Downloads/Test HTML/react-medical-app/src/components/NavBar/nav-bar.component.js"],"names":["React","useEffect","useState","Fragment","Link","Navigation","Toolbar","HamburgerButton","MobileNavigation","NavBar","props","navigation","toolbar","sticky","t","isOpenMobile","setOpenMobile","profileOptions","setProfileOption","componentElement","createRef","setNavFixed","navHeight","content","document","getElementsByClassName","length","style","onComponentResize","window","addEventListener","innerWidth","getUserProfileOptions","profile","filter","bar","id","toggleMobileMenu","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navigation, Toolbar, HamburgerButton, MobileNavigation } from './children';\n\ntype Props = {\n  t: Function,\n  navigation: Array<Object>,\n  toolbar: Array<React.Node>,\n  sticky?: boolean\n};\n\nconst NavBar = (props: Props) => {\n  const { navigation, toolbar, sticky, t } = props;\n  const [isOpenMobile, setOpenMobile] = useState(false);\n  const [profileOptions, setProfileOption] = useState([]);\n  const componentElement = React.createRef();\n\n  const setNavFixed = () => {\n    if (componentElement) {\n      const navHeight = 4;\n      const content = document.getElementsByClassName('contentApp');\n      if (content.length > 0) {\n        content[0].style['padding-top'] = `${navHeight}px`;\n      }\n    }\n  };\n\n  const onComponentResize = () => {\n    setNavFixed();\n    window.addEventListener('resize', () => {\n      setNavFixed();\n\n      if (window.innerWidth >= 1024 && isOpenMobile) {\n        setOpenMobile(false);\n      }\n    });\n  };\n\n  const getUserProfileOptions = () => {\n    const profile = toolbar ? toolbar.filter(bar => bar.id !== 'language') : [];\n    setProfileOption(profile);\n  };\n\n  useEffect(() => {\n    if (sticky) {\n      onComponentResize();\n    }\n\n    getUserProfileOptions();\n  }, [props, isOpenMobile]);\n\n  const toggleMobileMenu = () => {\n    setOpenMobile(!isOpenMobile);\n  };\n\n  return (\n    <header role=\"navigation\" className=\"header header__desktop fixed\" ref={componentElement}>\n      <section className=\"header-wrap\">\n        <div className=\"logo-block\">\n          <Link to=\"/welcome\">\n            <img src=\"/img/inrupt.svg\" alt=\"inrupt\" />\n          </Link>\n        </div>\n\n        {isOpenMobile ? (\n          <MobileNavigation\n            navigation={navigation}\n            toolbar={toolbar}\n            isOpenMobile={isOpenMobile}\n            toggleMobileMenu={toggleMobileMenu}\n            t={t}\n          >\n            <Navigation navigation={navigation} />\n            <Toolbar toolbar={profileOptions} open customClass=\"profile-list\" />\n          </MobileNavigation>\n        ) : (\n          <Fragment>\n            {navigation && <Navigation navigation={navigation} />}\n            {toolbar && <Toolbar toolbar={toolbar} />}\n          </Fragment>\n        )}\n        <HamburgerButton toggleMobileMenu={toggleMobileMenu} />\n      </section>\n    </header>\n  );\n};\n\nNavBar.defaultProps = {\n  sticky: true\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}