{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\src\\\\containers\\\\TicTacToe\\\\GameListPage\\\\game-list-page.component.js\";\n\nimport React, { Fragment, useState, useEffect, useCallback } from 'react';\nimport { LiveUpdate, useNotification, AccessControlList } from '@inrupt/solid-react-components';\nimport { useTranslation } from 'react-i18next';\nimport data from '@solid/query-ldflex';\nimport { namedNode } from '@rdfjs/data-model';\nimport { errorToaster, storageHelper, permissionHelper, ldflexHelper } from \"../../../utils\";\nimport { Form, List } from \"./children\";\nimport { Section, Wrapper } from \"../tic-tac-toe.style\";\n\nvar GameListPage = function GameListPage(_ref) {\n  var webId = _ref.webId;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      opponent = _useState2[0],\n      setOpponent = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gamePath = _useState4[0],\n      setGamePath = _useState4[1];\n\n  var _useNotification = useNotification(webId),\n      createNotification = _useNotification.createNotification,\n      notifications = _useNotification.notifications,\n      notification = _useNotification.notification,\n      createInbox = _useNotification.createInbox;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var sendNotification = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(content, to, type, license) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return createNotification(content, to, type, license);\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              errorToaster(_context.t0.message, 'Error');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function (_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [opponent, notifications, notification]);\n  /**\n   * Helper function to create or repair missing game files, such as the inbox and surrounding settings\n   * @param gamePath\n   * @returns {Promise<void>}\n   */\n\n  function initializeOrRepairGameFiles(_x5) {\n    return _initializeOrRepairGameFiles.apply(this, arguments);\n  }\n\n  function _initializeOrRepairGameFiles() {\n    _initializeOrRepairGameFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(gamePath) {\n      var settingsFilePath, inboxPath, hasInboxLink, inboxLinkedPath, hasWritePermission, hasControlPermissions;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // Set inbox path relative to the existing app's path in the pod\n              settingsFilePath = \"\".concat(gamePath, \"settings.ttl\");\n              inboxPath = \"\".concat(gamePath, \"inbox/\");\n              hasInboxLink = false; // Check if the settings file contains a link to the inbox. If so, save it as inboxPath\n\n              _context3.next = 5;\n              return ldflexHelper.getLinkedInbox(settingsFilePath);\n\n            case 5:\n              inboxLinkedPath = _context3.sent;\n\n              if (inboxLinkedPath) {\n                inboxPath = inboxLinkedPath;\n                hasInboxLink = true;\n              } // First, check if we have WRITE permission for the app\n\n\n              _context3.next = 9;\n              return permissionHelper.checkSpecificAppPermission(webId, AccessControlList.MODES.WRITE);\n\n            case 9:\n              hasWritePermission = _context3.sent;\n\n              if (!hasWritePermission) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.next = 13;\n              return createInbox(inboxPath, gamePath);\n\n            case 13:\n              _context3.next = 15;\n              return permissionHelper.checkSpecificAppPermission(webId, AccessControlList.MODES.CONTROL);\n\n            case 15:\n              hasControlPermissions = _context3.sent;\n\n              if (!hasControlPermissions) {\n                _context3.next = 19;\n                break;\n              }\n\n              _context3.next = 19;\n              return permissionHelper.checkOrSetInboxAppendPermissions(inboxPath, webId);\n\n            case 19:\n              if (hasInboxLink) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.next = 22;\n              return data[settingsFilePath].inbox.set(namedNode(inboxPath));\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _initializeOrRepairGameFiles.apply(this, arguments);\n  }\n\n  var init = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _gamePath;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return storageHelper.getAppStorage(webId);\n\n            case 3:\n              _gamePath = _context2.sent;\n              _context2.next = 6;\n              return storageHelper.createInitialFiles(webId);\n\n            case 6:\n              if (!_gamePath) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 9;\n              return initializeOrRepairGameFiles(_gamePath);\n\n            case 9:\n              setGamePath(_gamePath);\n\n            case 10:\n              _context2.next = 17;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n\n              if (!(_context2.t0.name === 'Inbox Error')) {\n                _context2.next = 16;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", errorToaster(_context2.t0.message, 'Error', {\n                label: t('errorCreateInbox.link.label'),\n                href: t('errorCreateInbox.link.href')\n              }));\n\n            case 16:\n              errorToaster(_context2.t0.message, 'Error');\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function init() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (webId && notification.notify) init();\n  }, [webId, notification.notify]);\n  return /*#__PURE__*/React.createElement(Section, {\n    \"data-testid\": \"game-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, webId && /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({\n    webId: webId,\n    sendNotification: sendNotification,\n    setOpponent: setOpponent,\n    opponent: opponent\n  }, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), gamePath && /*#__PURE__*/React.createElement(LiveUpdate, {\n    subscribe: gamePath,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(List, Object.assign({\n    webId: webId,\n    gamePath: gamePath,\n    sendNotification: sendNotification\n  }, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default GameListPage;","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/containers/TicTacToe/GameListPage/game-list-page.component.js"],"names":["React","Fragment","useState","useEffect","useCallback","LiveUpdate","useNotification","AccessControlList","useTranslation","data","namedNode","errorToaster","storageHelper","permissionHelper","ldflexHelper","Form","List","Section","Wrapper","GameListPage","webId","opponent","setOpponent","gamePath","setGamePath","createNotification","notifications","notification","createInbox","t","sendNotification","content","to","type","license","message","initializeOrRepairGameFiles","settingsFilePath","inboxPath","hasInboxLink","getLinkedInbox","inboxLinkedPath","checkSpecificAppPermission","MODES","WRITE","hasWritePermission","CONTROL","hasControlPermissions","checkOrSetInboxAppendPermissions","inbox","set","init","getAppStorage","createInitialFiles","name","label","href","notify"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useCallback } from 'react';\nimport { LiveUpdate, useNotification, AccessControlList } from '@inrupt/solid-react-components';\nimport { useTranslation } from 'react-i18next';\nimport data from '@solid/query-ldflex';\nimport { namedNode } from '@rdfjs/data-model';\nimport { errorToaster, storageHelper, permissionHelper, ldflexHelper } from '@utils';\nimport { Form, List } from './children';\nimport { Section, Wrapper } from '../tic-tac-toe.style';\n\nconst GameListPage = ({ webId }) => {\n  const [opponent, setOpponent] = useState('');\n  const [gamePath, setGamePath] = useState(null);\n  const { createNotification, notifications, notification, createInbox } = useNotification(webId);\n  const { t } = useTranslation();\n\n  const sendNotification = useCallback(\n    async (content, to, type, license) => {\n      try {\n        await createNotification(content, to, type, license);\n      } catch (error) {\n        errorToaster(error.message, 'Error');\n      }\n    },\n    [opponent, notifications, notification]\n  );\n\n  /**\n   * Helper function to create or repair missing game files, such as the inbox and surrounding settings\n   * @param gamePath\n   * @returns {Promise<void>}\n   */\n  async function initializeOrRepairGameFiles(gamePath) {\n    // Set inbox path relative to the existing app's path in the pod\n    const settingsFilePath = `${gamePath}settings.ttl`;\n    let inboxPath = `${gamePath}inbox/`;\n    let hasInboxLink = false;\n\n    // Check if the settings file contains a link to the inbox. If so, save it as inboxPath\n    const inboxLinkedPath = await ldflexHelper.getLinkedInbox(settingsFilePath);\n    if (inboxLinkedPath) {\n      inboxPath = inboxLinkedPath;\n      hasInboxLink = true;\n    }\n\n    // First, check if we have WRITE permission for the app\n    const hasWritePermission = await permissionHelper.checkSpecificAppPermission(\n      webId,\n      AccessControlList.MODES.WRITE\n    );\n    // If so, try to create the inbox. No point in trying to create it if we don't have permissions\n    if (hasWritePermission) {\n      await createInbox(inboxPath, gamePath);\n\n      // Check for CONTROL permissions to see if we can set permissions or not\n      const hasControlPermissions = await permissionHelper.checkSpecificAppPermission(\n        webId,\n        AccessControlList.MODES.CONTROL\n      );\n\n      // If the user has Write and Control permissions, check the inbox settings\n      if (hasControlPermissions) {\n        // Check if the inbox permissions are set to APPEND for public, and if not fix the issue\n        await permissionHelper.checkOrSetInboxAppendPermissions(inboxPath, webId);\n      }\n\n      if (!hasInboxLink) {\n        await data[settingsFilePath].inbox.set(namedNode(inboxPath));\n      }\n    }\n  }\n\n  const init = async () => {\n    try {\n      const gamePath = await storageHelper.getAppStorage(webId);\n\n      // Fetch the game's path in the pod, based on user's storage settings\n      await storageHelper.createInitialFiles(webId);\n\n      if (gamePath) {\n        await initializeOrRepairGameFiles(gamePath);\n        setGamePath(gamePath);\n      }\n    } catch (e) {\n      /**\n       * Check if something fails when we try to create a inbox\n       * and show user a possible solution\n       */\n      if (e.name === 'Inbox Error') {\n        return errorToaster(e.message, 'Error', {\n          label: t('errorCreateInbox.link.label'),\n          href: t('errorCreateInbox.link.href')\n        });\n      }\n\n      errorToaster(e.message, 'Error');\n    }\n  };\n\n  useEffect(() => {\n    if (webId && notification.notify) init();\n  }, [webId, notification.notify]);\n\n  return (\n    <Section data-testid=\"game-list\">\n      <Wrapper>\n        {webId && (\n          <Fragment>\n            <Form\n              {...{\n                webId,\n                sendNotification,\n                setOpponent,\n                opponent\n              }}\n            />\n            {gamePath && (\n              <LiveUpdate subscribe={gamePath}>\n                <List {...{ webId, gamePath, sendNotification }} />\n              </LiveUpdate>\n            )}\n          </Fragment>\n        )}\n      </Wrapper>\n    </Section>\n  );\n};\n\nexport default GameListPage;\n"]},"metadata":{},"sourceType":"module"}