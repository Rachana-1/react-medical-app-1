{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\src\\\\containers\\\\TicTacToe\\\\GamePage\\\\children\\\\Board\\\\board.component.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-template-rows: repeat(3, 1fr);\\n  grid-gap: 0;\\n  width: 100%;\\n  min-height: 200px;\\n  flex: 1 1 auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Field } from '..';\nvar GameBoard = styled.div(_templateObject());\n\nvar unique = function unique(seed) {\n  return Date.now() + seed;\n};\n\nvar borders = {\n  0: ['bottom', 'right'],\n  1: ['bottom'],\n  2: ['bottom', 'left'],\n  3: ['bottom', 'right'],\n  4: ['bottom'],\n  5: ['left', 'bottom'],\n  6: ['right'],\n  7: [],\n  8: ['left']\n};\n\nvar Board = function Board(_ref) {\n  var squares = _ref.squares,\n      _onMove = _ref.onMove,\n      canPlay = _ref.canPlay,\n      result = _ref.result;\n  return /*#__PURE__*/React.createElement(GameBoard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, squares.map(function (square, i) {\n    return /*#__PURE__*/React.createElement(Field, {\n      key: unique(i),\n      value: square,\n      onMove: function onMove() {\n        return _onMove(i);\n      },\n      canPlay: canPlay,\n      result: result,\n      index: i,\n      borders: borders[i],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    });\n  }));\n};\n\nexport default Board;","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/containers/TicTacToe/GamePage/children/Board/board.component.js"],"names":["React","styled","Field","GameBoard","div","unique","seed","Date","now","borders","Board","squares","onMove","canPlay","result","map","square","i"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,IAAtB;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV,mBAAf;;AAYA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI;AAAA,SAAIC,IAAI,CAACC,GAAL,KAAaF,IAAjB;AAAA,CAAnB;;AAEA,IAAMG,OAAO,GAAG;AACd,KAAG,CAAC,QAAD,EAAW,OAAX,CADW;AAEd,KAAG,CAAC,QAAD,CAFW;AAGd,KAAG,CAAC,QAAD,EAAW,MAAX,CAHW;AAId,KAAG,CAAC,QAAD,EAAW,OAAX,CAJW;AAKd,KAAG,CAAC,QAAD,CALW;AAMd,KAAG,CAAC,MAAD,EAAS,QAAT,CANW;AAOd,KAAG,CAAC,OAAD,CAPW;AAQd,KAAG,EARW;AASd,KAAG,CAAC,MAAD;AATW,CAAhB;;AAYA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,OAAZ,QAAYA,MAAZ;AAAA,MAAoBC,OAApB,QAAoBA,OAApB;AAAA,MAA6BC,MAA7B,QAA6BA,MAA7B;AAAA,sBACZ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACI,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT;AAAA,wBACX,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEZ,MAAM,CAACY,CAAD,CADb;AAEE,MAAA,KAAK,EAAED,MAFT;AAGE,MAAA,MAAM,EAAE;AAAA,eAAMJ,OAAM,CAACK,CAAD,CAAZ;AAAA,OAHV;AAIE,MAAA,OAAO,EAAEJ,OAJX;AAKE,MAAA,MAAM,EAAEC,MALV;AAME,MAAA,KAAK,EAAEG,CANT;AAOE,MAAA,OAAO,EAAER,OAAO,CAACQ,CAAD,CAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CADH,CADY;AAAA,CAAd;;AAgBA,eAAeP,KAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Field } from '..';\n\nconst GameBoard = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n  grid-gap: 0;\n  width: 100%;\n  min-height: 200px;\n  flex: 1 1 auto;\n`;\n\ntype Props = { squares: Array, onMove: Funtion, canPlay: Boolean, result: Object };\n\nconst unique = seed => Date.now() + seed;\n\nconst borders = {\n  0: ['bottom', 'right'],\n  1: ['bottom'],\n  2: ['bottom', 'left'],\n  3: ['bottom', 'right'],\n  4: ['bottom'],\n  5: ['left', 'bottom'],\n  6: ['right'],\n  7: [],\n  8: ['left']\n};\n\nconst Board = ({ squares, onMove, canPlay, result }: Props) => (\n  <GameBoard>\n    {squares.map((square, i) => (\n      <Field\n        key={unique(i)}\n        value={square}\n        onMove={() => onMove(i)}\n        canPlay={canPlay}\n        result={result}\n        index={i}\n        borders={borders[i]}\n      />\n    ))}\n  </GameBoard>\n);\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}