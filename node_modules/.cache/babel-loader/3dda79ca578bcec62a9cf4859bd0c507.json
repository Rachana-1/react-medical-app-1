{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncIterator from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncIterator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\src\\\\containers\\\\TicTacToe\\\\GameListPage\\\\children\\\\Form\\\\game-form.component.js\";\n\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { namedNode } from '@rdfjs/data-model';\nimport { AccessControlList, ACLFactory, NotificationTypes } from '@inrupt/solid-react-components';\nimport tictactoeShape from \"../../../../../contexts/tictactoe-shape.json\";\nimport { ldflexHelper, errorToaster, successToaster, storageHelper, notification as helperNotification } from \"../../../../../utils\";\nimport { GameFormWrapper, BtnDiv } from \"./game-form.styles\";\n\nvar GameForm = function GameForm(_ref) {\n  var webId = _ref.webId,\n      sendNotification = _ref.sendNotification,\n      opponent = _ref.opponent,\n      setOpponent = _ref.setOpponent;\n  var uniqueIdentifier = Date.now();\n\n  var _useState = useState(\"\".concat(uniqueIdentifier, \".ttl\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      documentUri = _useState2[0],\n      setDocumentUri = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var reset = function reset() {\n    setDocumentUri('');\n    setOpponent('');\n  };\n  /**\n   * Creates the initial game object based on the opponent's webId\n   * @param {String} opponent Opponent's webId\n   * @returns {Object} Game data\n   */\n\n\n  var initialGame = function initialGame(opponent) {\n    return {\n      status: 'Invite Sent',\n      created: moment().format(),\n      actor: namedNode(webId),\n      opponent: namedNode(opponent),\n      initialState: 'X',\n      move: ''\n    };\n  };\n  /**\n   * Creates a game with the initial game object and sends a notification to the rival\n   * @param {String} documentUri Game document's url\n   * @param {String} opponent Opponent's webId\n   */\n\n\n  var createGame = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(documentUri, opponent) {\n      var appPath, gameSettings, licenseUrl, inboxes, newDocument, document, setupObj, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, field, prefix, predicate, obj, to, target;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return storageHelper.getAppStorage(opponent);\n\n            case 3:\n              appPath = _context.sent;\n              gameSettings = \"\".concat(appPath, \"settings.ttl\");\n              licenseUrl = 'https://creativecommons.org/licenses/by-sa/4.0/';\n              /**\n               * Find opponent inboxes from a document link\n               */\n\n              _context.next = 8;\n              return helperNotification.findUserInboxes([{\n                path: opponent,\n                name: 'Global'\n              }, {\n                path: gameSettings,\n                name: 'Game'\n              }]);\n\n            case 8:\n              inboxes = _context.sent;\n\n              if (!(inboxes.length > 0)) {\n                _context.next = 67;\n                break;\n              }\n\n              _context.next = 12;\n              return ldflexHelper.createNonExistentDocument(documentUri);\n\n            case 12:\n              newDocument = _context.sent;\n\n              if (newDocument) {\n                _context.next = 16;\n                break;\n              }\n\n              errorToaster(\"\".concat(documentUri, \" \").concat(t('game.alreadyExists')), t('notifications.error'));\n              return _context.abrupt(\"return\", null);\n\n            case 16:\n              if (!newDocument.ok) {\n                _context.next = 65;\n                break;\n              }\n\n              _context.next = 19;\n              return ldflexHelper.fetchLdflexDocument(documentUri);\n\n            case 19:\n              document = _context.sent;\n              setupObj = initialGame(opponent);\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 23;\n              _iterator = _asyncIterator(tictactoeShape.shape);\n\n            case 25:\n              _context.next = 27;\n              return _iterator.next();\n\n            case 27:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 31;\n              return _step.value;\n\n            case 31:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 43;\n                break;\n              }\n\n              field = _value;\n              prefix = tictactoeShape['@context'][field.prefix];\n              predicate = \"\".concat(prefix).concat(field.predicate);\n              obj = setupObj[field.predicate];\n\n              if (!(obj || obj === '')) {\n                _context.next = 40;\n                break;\n              }\n\n              _context.next = 40;\n              return document[predicate].add(obj);\n\n            case 40:\n              _iteratorNormalCompletion = true;\n              _context.next = 25;\n              break;\n\n            case 43:\n              _context.next = 49;\n              break;\n\n            case 45:\n              _context.prev = 45;\n              _context.t0 = _context[\"catch\"](23);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 49:\n              _context.prev = 49;\n              _context.prev = 50;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 54;\n                break;\n              }\n\n              _context.next = 54;\n              return _iterator.return();\n\n            case 54:\n              _context.prev = 54;\n\n              if (!_didIteratorError) {\n                _context.next = 57;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 57:\n              return _context.finish(54);\n\n            case 58:\n              return _context.finish(49);\n\n            case 59:\n              /**\n               * Find the opponent's game-specific inbox. If it doesn't exist, get the global inbox instead\n               * @to: Opponent inbox path\n               */\n              to = helperNotification.getDefaultInbox(inboxes, 'Game', 'Global');\n              target = \"\".concat(window.location.href, \"/\").concat(btoa(documentUri));\n              _context.next = 63;\n              return sendNotification({\n                title: 'Tictactoe invitation',\n                summary: 'has invited you to play Tic-Tac-Toe.',\n                actor: webId,\n                object: documentUri,\n                target: target\n              }, to.path, NotificationTypes.INVITE, licenseUrl);\n\n            case 63:\n              setDocumentUri(\"\".concat(Date.now(), \".ttl\"));\n              return _context.abrupt(\"return\", true);\n\n            case 65:\n              errorToaster(\"\".concat(opponent, \" \").concat(t('game.createFolder.message')), t('notifications.error'));\n              return _context.abrupt(\"return\", null);\n\n            case 67:\n              errorToaster(\"\".concat(opponent, \" \").concat(t('noInboxOpponent.message')), t('notifications.error'), {\n                label: t('noInboxOpponent.link.label'),\n                href: t('noInboxOpponent.link.href')\n              });\n              return _context.abrupt(\"return\", null);\n\n            case 71:\n              _context.prev = 71;\n              _context.t1 = _context[\"catch\"](0);\n              errorToaster(_context.t1.message, t('notifications.error'));\n\n            case 74:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 71], [23, 45, 49, 59], [50,, 54, 58]]);\n    }));\n\n    return function createGame(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Creates a new game based on an opponent's webId and a game document url with an acl file\n   * @param {Event} e Submit event\n   */\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var appPath, documentPath, result, permissions, ACLFile;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              e.preventDefault();\n              _context2.next = 4;\n              return storageHelper.getAppStorage(webId);\n\n            case 4:\n              appPath = _context2.sent;\n              documentPath = \"\".concat(appPath).concat(documentUri);\n\n              if (!(!opponent || opponent === '')) {\n                _context2.next = 9;\n                break;\n              }\n\n              errorToaster(t('game.opponentMissing'), t('game.errorTitle'));\n              return _context2.abrupt(\"return\");\n\n            case 9:\n              if (!(webId === opponent)) {\n                _context2.next = 12;\n                break;\n              }\n\n              errorToaster(t('game.myself'), t('game.errorTitle'));\n              return _context2.abrupt(\"return\");\n\n            case 12:\n              _context2.next = 14;\n              return createGame(documentPath, opponent);\n\n            case 14:\n              result = _context2.sent;\n\n              if (!result) {\n                _context2.next = 23;\n                break;\n              }\n\n              permissions = [{\n                agents: [opponent],\n                modes: [AccessControlList.MODES.READ, AccessControlList.MODES.WRITE]\n              }];\n              _context2.next = 19;\n              return ACLFactory.createNewAcl(webId, documentPath);\n\n            case 19:\n              ACLFile = _context2.sent;\n              _context2.next = 22;\n              return ACLFile.createACL(permissions);\n\n            case 22:\n              successToaster(t('game.createGameSuccess'), t('notifications.success'));\n\n            case 23:\n              _context2.next = 28;\n              break;\n\n            case 25:\n              _context2.prev = 25;\n              _context2.t0 = _context2[\"catch\"](0);\n              errorToaster(_context2.t0.message, t('game.errorTitle'));\n\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 25]]);\n    }));\n\n    return function onSubmit(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(GameFormWrapper, {\n    onSubmit: onSubmit,\n    \"data-testid\": \"game-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, t('game.title')), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, t('game.createGamePrompt')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"documentUriInput\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, t('game.idLabel'), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"documentUriInput\",\n    type: \"text\",\n    value: documentUri,\n    onChange: function onChange(e) {\n      return setDocumentUri(e.target.value);\n    },\n    \"data-testid\": \"uri-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"opponentWebId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, t('game.opponentWebIDLabel'), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"opponentWebId\",\n    type: \"text\",\n    value: opponent,\n    onChange: function onChange(e) {\n      return setOpponent(e.target.value);\n    },\n    \"data-testid\": \"webId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(BtnDiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    \"data-testid\": \"form-submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, t('game.createGame')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: reset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, t('game.resetGameForm')))));\n};\n\nexport default GameForm;","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/containers/TicTacToe/GameListPage/children/Form/game-form.component.js"],"names":["React","useState","useTranslation","moment","namedNode","AccessControlList","ACLFactory","NotificationTypes","tictactoeShape","ldflexHelper","errorToaster","successToaster","storageHelper","notification","helperNotification","GameFormWrapper","BtnDiv","GameForm","webId","sendNotification","opponent","setOpponent","uniqueIdentifier","Date","now","documentUri","setDocumentUri","t","reset","initialGame","status","created","format","actor","initialState","move","createGame","getAppStorage","appPath","gameSettings","licenseUrl","findUserInboxes","path","name","inboxes","length","createNonExistentDocument","newDocument","ok","fetchLdflexDocument","document","setupObj","shape","field","prefix","predicate","obj","add","to","getDefaultInbox","target","window","location","href","btoa","title","summary","object","INVITE","label","message","onSubmit","e","preventDefault","documentPath","result","permissions","agents","modes","MODES","READ","WRITE","createNewAcl","ACLFile","createACL","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { namedNode } from '@rdfjs/data-model';\nimport { AccessControlList, ACLFactory, NotificationTypes } from '@inrupt/solid-react-components';\nimport tictactoeShape from '@contexts/tictactoe-shape.json';\nimport {\n  ldflexHelper,\n  errorToaster,\n  successToaster,\n  storageHelper,\n  notification as helperNotification\n} from '@utils';\nimport { GameFormWrapper, BtnDiv } from './game-form.styles';\n\ntype Props = {\n  webId: String,\n  sendNotification: () => void,\n  opponent: string,\n  setOpponent: () => void\n};\n\nconst GameForm = ({ webId, sendNotification, opponent, setOpponent }: Props) => {\n  const uniqueIdentifier = Date.now();\n  const [documentUri, setDocumentUri] = useState(`${uniqueIdentifier}.ttl`);\n  const { t } = useTranslation();\n\n  const reset = () => {\n    setDocumentUri('');\n    setOpponent('');\n  };\n\n  /**\n   * Creates the initial game object based on the opponent's webId\n   * @param {String} opponent Opponent's webId\n   * @returns {Object} Game data\n   */\n  const initialGame = opponent => ({\n    status: 'Invite Sent',\n    created: moment().format(),\n    actor: namedNode(webId),\n    opponent: namedNode(opponent),\n    initialState: 'X',\n    move: ''\n  });\n\n  /**\n   * Creates a game with the initial game object and sends a notification to the rival\n   * @param {String} documentUri Game document's url\n   * @param {String} opponent Opponent's webId\n   */\n  const createGame = async (documentUri: String, opponent: String) => {\n    try {\n      /**\n       * Get full opponent game path\n       */\n      const appPath = await storageHelper.getAppStorage(opponent);\n      const gameSettings = `${appPath}settings.ttl`;\n      const licenseUrl = 'https://creativecommons.org/licenses/by-sa/4.0/';\n      /**\n       * Find opponent inboxes from a document link\n       */\n      const inboxes = await helperNotification.findUserInboxes([\n        { path: opponent, name: 'Global' },\n        { path: gameSettings, name: 'Game' }\n      ]);\n      /**\n       * If opponent has at least one inbox, create a game and send a notification\n       * Otherwise, show an error message\n       * */\n      if (inboxes.length > 0) {\n        const newDocument = await ldflexHelper.createNonExistentDocument(documentUri);\n\n        /**\n         * If game already exist show an error message\n         */\n        if (!newDocument) {\n          errorToaster(`${documentUri} ${t('game.alreadyExists')}`, t('notifications.error'));\n          return null;\n        }\n\n        /**\n         * If document was created we will initialize the game, otherwise show an error\n         */\n        if (newDocument.ok) {\n          const document = await ldflexHelper.fetchLdflexDocument(documentUri);\n          const setupObj = initialGame(opponent);\n\n          for await (const field of tictactoeShape.shape) {\n            const prefix = tictactoeShape['@context'][field.prefix];\n            const predicate = `${prefix}${field.predicate}`;\n            const obj = setupObj[field.predicate];\n            if (obj || obj === '') await document[predicate].add(obj);\n          }\n          /**\n           * Find the opponent's game-specific inbox. If it doesn't exist, get the global inbox instead\n           * @to: Opponent inbox path\n           */\n          const to = helperNotification.getDefaultInbox(inboxes, 'Game', 'Global');\n          const target = `${window.location.href}/${btoa(documentUri)}`;\n          await sendNotification(\n            {\n              title: 'Tictactoe invitation',\n              summary: 'has invited you to play Tic-Tac-Toe.',\n              actor: webId,\n              object: documentUri,\n              target\n            },\n            to.path,\n            NotificationTypes.INVITE,\n            licenseUrl\n          );\n\n          setDocumentUri(`${Date.now()}.ttl`);\n\n          return true;\n        }\n        errorToaster(`${opponent} ${t('game.createFolder.message')}`, t('notifications.error'));\n        return null;\n      }\n\n      errorToaster(`${opponent} ${t('noInboxOpponent.message')}`, t('notifications.error'), {\n        label: t('noInboxOpponent.link.label'),\n        href: t('noInboxOpponent.link.href')\n      });\n\n      return null;\n    } catch (e) {\n      errorToaster(e.message, t('notifications.error'));\n    }\n  };\n\n  /**\n   * Creates a new game based on an opponent's webId and a game document url with an acl file\n   * @param {Event} e Submit event\n   */\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      const appPath = await storageHelper.getAppStorage(webId);\n      const documentPath = `${appPath}${documentUri}`;\n\n      if (!opponent || opponent === '') {\n        errorToaster(t('game.opponentMissing'), t('game.errorTitle'));\n        return;\n      }\n\n      if (webId === opponent) {\n        errorToaster(t('game.myself'), t('game.errorTitle'));\n        return;\n      }\n\n      const result = await createGame(documentPath, opponent);\n\n      if (result) {\n        const permissions = [\n          {\n            agents: [opponent],\n            modes: [AccessControlList.MODES.READ, AccessControlList.MODES.WRITE]\n          }\n        ];\n        const ACLFile = await ACLFactory.createNewAcl(webId, documentPath);\n        await ACLFile.createACL(permissions);\n        successToaster(t('game.createGameSuccess'), t('notifications.success'));\n      }\n    } catch (e) {\n      errorToaster(e.message, t('game.errorTitle'));\n    }\n  };\n\n  return (\n    <GameFormWrapper onSubmit={onSubmit} data-testid=\"game-form\">\n      <h1>{t('game.title')}</h1>\n      <hr />\n      <form>\n        <span>{t('game.createGamePrompt')}</span>\n        <div className=\"input-wrap\">\n          <label htmlFor=\"documentUriInput\">\n            {t('game.idLabel')}\n            <input\n              id=\"documentUriInput\"\n              type=\"text\"\n              value={documentUri}\n              onChange={e => setDocumentUri(e.target.value)}\n              data-testid=\"uri-input\"\n            />\n          </label>\n        </div>\n        <div className=\"input-wrap\">\n          <label htmlFor=\"opponentWebId\">\n            {t('game.opponentWebIDLabel')}\n            <input\n              id=\"opponentWebId\"\n              type=\"text\"\n              value={opponent}\n              onChange={e => setOpponent(e.target.value)}\n              data-testid=\"webId\"\n            />\n          </label>\n        </div>\n        <BtnDiv>\n          <button type=\"submit\" data-testid=\"form-submit\">\n            {t('game.createGame')}\n          </button>\n          <button type=\"button\" onClick={reset}>\n            {t('game.resetGameForm')}\n          </button>\n        </BtnDiv>\n      </form>\n    </GameFormWrapper>\n  );\n};\n\nexport default GameForm;\n"]},"metadata":{},"sourceType":"module"}