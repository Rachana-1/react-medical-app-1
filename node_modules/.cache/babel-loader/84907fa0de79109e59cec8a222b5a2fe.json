{"ast":null,"code":"import _slicedToArray from \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Downloads\\\\Test HTML\\\\testgenerator\\\\Test_app\\\\src\\\\containers\\\\Profile\\\\profile.container.js\";\n\nimport React, { Fragment, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormModel } from '@inrupt/solid-react-components';\nimport { successToaster, errorToaster, languageHelper } from \"../../utils\";\nimport { Loader } from \"../../components/Utils\";\nimport { Header, ProfileContainer, ProfileWrapper, AutoSaveNotification, WebId } from \"./profile.style\";\nimport { TextEditorWrapper, TextEditorContainer, Form, FullGridSize, Button, Label, Input, TextArea } from \"../TextEditor\";\nimport { FormWrapper } from \"../FormModel/form-model.style\";\nimport { Image } from \"./components\";\nimport { AutoSaveSpinner } from \"../../components\";\nvar defaultProfilePhoto = '/img/icon/empty-profile.svg';\nvar language = languageHelper.getLanguageCode();\n/**\n * We are using ldflex to fetch profile data from a solid pod.\n * ldflex libary is using json-LD for this reason you will see async calls\n * when we want to get a field value, why ? becuase they are expanded the data\n * this means the result will have a better format to read on Javascript.\n * for more information please go to: https://github.com/solid/query-ldflex\n */\n\nvar Profile = function Profile(_ref) {\n  var webId = _ref.webId;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var _onError = function onError(e) {\n    if (e.message.toString().indexOf('Validation failed') < 0) {\n      errorToaster(t('formLanguage.renderer.formNotLoaded'), t('notifications.error'), {\n        label: t('errorFormRender.link.label'),\n        href: t('errorFormRender.link.href')\n      });\n      setIsLoading(false);\n    }\n  };\n\n  var _onDelete = function onDelete() {\n    successToaster(t('formLanguage.renderer.fieldDeleted'), t('notifications.success'));\n  };\n\n  var _onAddNewField = function onAddNewField() {\n    successToaster(t('formLanguage.renderer.fieldAdded'), t('notifications.success'));\n  };\n\n  return /*#__PURE__*/React.createElement(ProfileWrapper, {\n    \"data-testid\": \"profile-component\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProfileContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, webId && /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, t('editor.url'), \":\", /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    size: \"200\",\n    value: url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, Object.assign({\n    webId: webId,\n    defaultProfilePhoto: defaultProfilePhoto\n  }, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(AutoSaveNotification, {\n    className: \"banner-wrap--warning banner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner-wrap__content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon fa fa-exclamation-circle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), t('profile.autosaveNotification'))), /*#__PURE__*/React.createElement(WebId, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"id-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: webId,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, webId)), /*#__PURE__*/React.createElement(FormWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormModel, Object.assign({\n    modelSource: 'https://ritvik18.solid.community/public/profile.ttl#formRoot',\n    dataSource: 'https://ritvik18.solid.community/share/testt.ttl',\n    viewer: false,\n    onInit: function onInit() {\n      setIsLoading(true);\n    },\n    onLoaded: function onLoaded() {\n      setIsLoading(false);\n    },\n    onSuccess: function onSuccess() {},\n    onSave: function onSave() {},\n    onError: function onError(error) {\n      _onError(error);\n    },\n    onAddNewField: function onAddNewField(response) {\n      return _onAddNewField(response);\n    },\n    onDelete: function onDelete(response) {\n      return _onDelete(response);\n    },\n    options: {\n      theme: {\n        inputText: 'input-wrap',\n        inputCheckbox: 'sdk-checkbox checkbox',\n        form: 'inrupt-sdk-form',\n        childGroup: 'inrupt-form-group',\n        groupField: 'group-wrapper',\n        multipleField: 'multiple-wrapper'\n      },\n      autosave: true,\n      autosaveIndicator: AutoSaveSpinner,\n      language: language\n    }\n  }, {\n    liveUpdate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })))), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    absolute: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:/Downloads/Test HTML/testgenerator/Test_app/src/containers/Profile/profile.container.js"],"names":["React","Fragment","useState","useTranslation","FontAwesomeIcon","FormModel","successToaster","errorToaster","languageHelper","Loader","Header","ProfileContainer","ProfileWrapper","AutoSaveNotification","WebId","TextEditorWrapper","TextEditorContainer","Form","FullGridSize","Button","Label","Input","TextArea","FormWrapper","Image","AutoSaveSpinner","defaultProfilePhoto","language","getLanguageCode","Profile","webId","t","isLoading","setIsLoading","url","setUrl","onError","e","message","toString","indexOf","label","href","onDelete","onAddNewField","modelSource","dataSource","viewer","onInit","onLoaded","onSuccess","onSave","error","response","options","theme","inputText","inputCheckbox","form","childGroup","groupField","multipleField","autosave","autosaveIndicator"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormModel } from '@inrupt/solid-react-components';\nimport { successToaster, errorToaster, languageHelper } from '@utils';\nimport { Loader } from '@util-components';\nimport {\n  Header,\n  ProfileContainer,\n  ProfileWrapper,\n  AutoSaveNotification,\n  WebId\n} from './profile.style';\nimport {\n  TextEditorWrapper,\n  TextEditorContainer,\n  Form,\n  FullGridSize,\n  Button,\n  Label,\n  Input,\n  TextArea\n} from '../TextEditor';\nimport { FormWrapper } from '../FormModel/form-model.style';\nimport { Image } from './components';\nimport { AutoSaveSpinner } from '@components';\n\nconst defaultProfilePhoto = '/img/icon/empty-profile.svg';\nconst language = languageHelper.getLanguageCode();\n\n/**\n * We are using ldflex to fetch profile data from a solid pod.\n * ldflex libary is using json-LD for this reason you will see async calls\n * when we want to get a field value, why ? becuase they are expanded the data\n * this means the result will have a better format to read on Javascript.\n * for more information please go to: https://github.com/solid/query-ldflex\n */\ntype Props = { webId: String };\n\nconst Profile = ({ webId }: Props) => {\n  const { t } = useTranslation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [url, setUrl] = useState('');\n  \n\n  const onError = e => {\n    if (e.message.toString().indexOf('Validation failed') < 0) {\n      errorToaster(t('formLanguage.renderer.formNotLoaded'), t('notifications.error'), {\n        label: t('errorFormRender.link.label'),\n        href: t('errorFormRender.link.href')\n      });\n      setIsLoading(false);\n    }\n  };\n\n  const onDelete = () => {\n    successToaster(t('formLanguage.renderer.fieldDeleted'), t('notifications.success'));\n  };\n\n  const onAddNewField = () => {\n    successToaster(t('formLanguage.renderer.fieldAdded'), t('notifications.success'));\n  };\n  \n\n  return (\n    <ProfileWrapper data-testid=\"profile-component\">\n      <ProfileContainer>\n        {webId && (\n          <Fragment>\n            <Label>\n          {t('editor.url')}:\n          <Input type=\"text\" size=\"200\" value={url} />\n        </Label>\n            <Header>\n              <Image\n                {...{\n                  webId,\n                  defaultProfilePhoto\n                }}\n              />\n            </Header>\n\n            <AutoSaveNotification className=\"banner-wrap--warning banner\">\n              <div className=\"banner-wrap__content\">\n                <i className=\"icon fa fa-exclamation-circle\" />\n                {t('profile.autosaveNotification')}\n              </div>\n            </AutoSaveNotification>\n\n            <WebId>\n              <FontAwesomeIcon icon=\"id-card\" />\n              <a href={webId} target=\"_blank\" rel=\"noopener noreferrer\">\n                {webId}\n              </a>\n            </WebId>\n            <FormWrapper>\n              <FormModel\n                {...{\n                  modelSource: 'https://ritvik18.solid.community/public/profile.ttl#formRoot',\n                  dataSource: 'https://ritvik18.solid.community/share/testt.ttl',\n                  viewer: false,\n                  onInit: () => {\n                    setIsLoading(true);\n                  },\n                  onLoaded: () => {\n                    setIsLoading(false);\n                  },\n                  onSuccess: () => {},\n                  onSave: () => {},\n                  onError: error => {\n                    onError(error);\n                  },\n                  onAddNewField: response => onAddNewField(response),\n                  onDelete: response => onDelete(response),\n                  options: {\n                    theme: {\n                      inputText: 'input-wrap',\n                      inputCheckbox: 'sdk-checkbox checkbox',\n                      form: 'inrupt-sdk-form',\n                      childGroup: 'inrupt-form-group',\n                      groupField: 'group-wrapper',\n                      multipleField: 'multiple-wrapper'\n                    },\n                    autosave: true,\n                    autosaveIndicator: AutoSaveSpinner,\n                    language\n                  }\n                }}\n                liveUpdate\n              />\n            </FormWrapper>\n          </Fragment>\n        )}\n        {isLoading && <Loader absolute />}\n      </ProfileContainer>\n    </ProfileWrapper>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}